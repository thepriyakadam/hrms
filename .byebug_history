exit
@employees = Employee.where(department_id: @department).pluck(:id)
@department = params[:salary][:company_location_id]
@date = params[:salary][:date]
exit
@department = params[:salary][:department_id]
@date = params[:salary][:date]
exit
@present = params[:present]
@date = params[:date]
exit
@present = params[:present]
@date = params[:date]
exit
@department = params[:department_id]
@date = params[:date]
exit
tp @employee_attendances = EmployeeAttendance.where(day: @date.to_date,employee_id: @employees)
@employee_attendances = EmployeeAttendance.where(day: @date.to_date,employee_id: @employees)
tp EmployeeAttendance.where(day: @date.to_date)
@date = params[:date]
tp EmployeeAttendance.where(day: @date)
@employee_attendances = EmployeeAttendance.where(day: @date)
@employee_attendances = EmployeeAttendance.where(day: @date,employee_id: @employees)
@employees = Employee.where(department_id: @department).pluck(:id)
@department = params[:department_id]
@date = params[:date]
exit
tp deducted_calculated_amount = (formula_item_calculated_amount / 100 * @master_esic.percentage).ceil
tp formula_item_calculated_amount = (@total_actual /  working_day.try(:day_in_month) * working_day.try(:payable_day))
tp @total / working_day.try(:payable_day)
@total / working_day.try(:payable_day)
tp working_day.try(:payable_day)
working_day.try(:payable_day)
@total
@total_actual
@total = formula_item.sum(:calculated_amount)
formula_item_calculated_amount = (@total / working_day.try(:day_in_month))
formula_item_calculated_amount = (@total / working_day.try(:payable_day))
tp formula_item_calculated_amount = (@total / working_day.try(:payable_day))
tp formula_item_actual_amount = (@total_actual / working_day.try(:day_in_month))
tp @total = formula_item.sum(:calculated_amount)
tp @total_actual = formula_item.sum(:actual_amount)
@total_actual = formula_item.sum(:actual_amount)
tp formula_item = SalaryslipComponent.where(salary_component_id: formula_string,salaryslip_id: @salaryslip.id)
formula_item = SalaryslipComponent.where(salary_component_id: formula_string,salaryslip_id: @salaryslip.id)
formula_string = @master_esic.base_component.split(',').map {|i| i.to_i}
exit
tp formula_item = SalaryslipComponent.where(salary_component_id: formula_string,salaryslip_id: @salaryslip.id)
tp deducted_calculated_amount = (formula_item_calculated_amount / 100 * @master_esic.percentage).ceil
deducted_calculated_amount = (formula_item_calculated_amount / 100 * @master_esic.percentage).ceil
tp deducted_actual_amount = (formula_item_actual_amount / 100 * @master_esic.percentage).ceil
deducted_actual_amount = (formula_item_actual_amount / 100 * @master_esic.percentage).ceil
formula_item_actual_amount = (@total_actual / working_day.try(:day_in_month))
formula_item_calculated_amount = (@total / working_day.try(:day_in_month) * working_day.try(:payable_day))
@total_actual = formula_item.sum(:actual_amount)
@total = formula_item.sum(:calculated_amount)
formula_item = SalaryslipComponent.where(salary_component_id: formula_string,salaryslip_id: @salaryslip.id)
formula_string = @master_esic.base_component.split(',').map {|i| i.to_i}
@total_actual = formula_item.sum(:actual_amount)
exit
tp formula_item_actual_amount = (@total_actual / working_day.try(:day_in_month) * working_day.try(:payable_day))
formula_item_actual_amount = (@total_actual / working_day.try(:day_in_month) * working_day.try(:payable_day))
tp formula_item_calculated_amount = (@total / working_day.try(:day_in_month))
formula_item_calculated_amount = (@total / working_day.try(:day_in_month))
tp @total_actual = formula_item.sum(:actual_amount)
@total_actual = formula_item.sum(:actual_amount)
tp @total = formula_item.sum(:calculated_amount)
@total = formula_item.sum(:calculated_amount)
tp formula_item = SalaryslipComponent.where(salary_component_id: formula_string,salaryslip_id: @salaryslip.id)
formula_item = SalaryslipComponent.where(salary_component_id: formula_string,salaryslip_id: @salaryslip.id)
formula_string = @master_esic.base_component.split(',').map {|i| i.to_i}
@master_esic.esic && addable_total_calculated_amount <= @master_esic.max_limit && @employee.joining_detail.have_esic
@total = formula_item.sum(:calculated_amount)
exit
tp @week_off_master
@week_off_master
tp @week_off_master.update(week_off_master_params)
tp @week_off_master = WeekOffMaster.find(params[:week_off_master_id])
@week_off_master = WeekOffMaster.find(params[:week_off_master_id])
exit
tp @employee_leav_request
@employee_leav_request
@employee_leav_request.leave_count < @leav_category.from or @employee_leav_request.leave_count > @leav_category.to
@employee_leav_request.leave_count
exit
tp @total = formula_item.sum(:calculated_amount)
@total = formula_item.sum(:calculated_amount)
tp  formula_item = SalaryslipComponent.where(salary_component_id: formula_string,salaryslip_id: @salaryslip.id)
formula_string = @professional_tax_masters.base_component.split(',').map {|i| i.to_i}
tp  formula_item = SalaryslipComponent.where(salary_component_id: formula_string,salaryslip_id: @salaryslip.id)
 formula_item = SalaryslipComponent.where(salary_component_id: formula_string,salaryslip_id: @salaryslip.id)
@professional_tax_masters.base_component.split(',').map {|i| i.to_i}
tp @professional_tax_masters = ProfessionalTaxMaster.where(is_active: true).take
@professional_tax_masters.base_component
tp @professional_tax_masters = ProfessionalTaxMaster.where(is_active: true)
@professional_tax_masters.base_component.split(',').map {|i| i.to_i}
tp @professional_tax_masters = ProfessionalTaxMaster.where(is_active: true)
formula_string = @professional_tax_masters.base_component.split(',').map {|i| i.to_i}
tp @professional_tax_masters = ProfessionalTaxMaster.where(is_active: true)
exit
tp formula_item = SalaryslipComponent.where(salary_component_id: formula_string,salaryslip_id: @salaryslip.id)
 @total = formula_item.sum(:calculated_amount)
tp formula_item = SalaryslipComponent.where(salary_component_id: formula_string,salaryslip_id: @salaryslip.id)
tp @total = formula_item.sum(:calculated_amount)
tp formula_item = SalaryslipComponent.where(salary_component_id: formula_string,salaryslip_id: @salaryslip.id)
@total_actual = formula_item.sum(:actual_amount)
tp formula_item = SalaryslipComponent.where(salary_component_id: formula_string,salaryslip_id: @salaryslip.id).take
@total_actual = formula_item.sum(:actual_amount)
@total = formula_item.sum(:calculated_amount)
tp @total = formula_item.sum(:calculated_amount)
@total = formula_item.sum(:calculated_amount)
tp formula_item = SalaryslipComponent.where(salary_component_id: formula_string,salaryslip_id: @salaryslip.id)
formula_item = SalaryslipComponent.where(salary_component_id: formula_string,salaryslip_id: @salaryslip.id)
formula_string = @professional_tax_masters.base_component.split(',').map {|i| i.to_i}
 @professional_tax_masters.base_component.split(',').map {|i| i.to_i}
tp @professional_tax_masters.base_component.split(',').map {|i| i.to_i}
tp @professional_tax_masters = ProfessionalTaxMaster.where(is_active: true).take
tp @professional_tax_masters = ProfessionalTaxMaster.where(is_active: true)
@professional_tax_masters = ProfessionalTaxMaster.where(is_active: true)
