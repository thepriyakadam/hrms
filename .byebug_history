c
C
total_time_diff = time_diff - ctm.working_hrs.to_f
time_diff=TimeDifference.between(@c3.in_time.strftime('%H:%M:%S'), @c3.out_time.strftime('%H:%M:%S')).in_hours.to_f
@c3.present == "A"
\
exit
e.in.nil? || e.out.nil? || e.present.nil?
exit
e.in.nil? == false
e.in
e.in.nil?
e.present.nil? == false
e.present
e.in.nil? && e.out.nil? && e.present.nil? == false
c
exit
e.present == nil
e.present
e.present == nil
e.present != nil
e.present
e.present.nil?
e.in.nil? && e.present.nil? == false
e.in.nil? && e.out.nil? && e.present.nil? == false
exit
e.out == nil
e.out
e.in
e.present.nil?
e.out.nil? && e.present.nil? == false
e.in.nil? && e.present.nil? == false
.in.nil? && e.present.nil? == false
e.in.nil? && e.out.nil? && e.present.nil? == false
exit
e.out.nil?
e.in.nil?
e.in.nil? || e.out.nil? && e.present.nil? == false
e.in.nil? || e.out.nil? && e.present.nil? == 
e.present == ""
e.present == nil
e.present
e.present.nil? == false
e.in.nil? || e.out.nil?
e.in.nil? || e.out.nil? && e.present.nil? == false
e.in.nil? && e.out.nil? && e.present.nil? == false
exit
e.in.nil? || e.out.nil? && e.present.nil? == false
e.in.nil? && e.out.nil? && e.present.nil? == false
exit
e.present.nil?
e.present.nil? == false
e.in.nil? && e.out.nil? && e.present == !nil
exit
e.present == !nil
e.present == ""
e.out.nil?
e.in.nil?
e.in.nil? && e.out.nil? && e.present == ""
exit
joining_detail.ot_option == true
joining_detail = JoiningDetail.where(employee_id: x).take
exit
x.to_i.joining_detail.ot_option
x.to_i
x
x.joining_detail
x.joining_detail.ot_option
lmm.late_mark.to_f
c
lmm.late_mark.to_f
exit
Workingday.where(id: wor,employee_id: wor.employee_id).update_all(calculated_payable_days: final_payable_day.to_f,ot_days: nil)
exit
Workingday.where(id: wor,employee_id: wor.employee_id).update_all(calculated_payable_days: final_payable_day.to_f,ot_days: nil)
exit
search_by_start_date
c
e.present == "P"
exit
EmployeeAttendance.create(employee_id: e.employee_id,day: e.day.to_date,in_time: e.in,out_time: e.out,machine_attendances_id: e.id,company_time_master_id: ctm.id,present: e.present,month_name: month_name)
\
exit
EmployeeAttendance.create(employee_id: e.employee_id,day: e.day.to_date,in_time: e.in,out_time: e.out,machine_attendances_id: e.id,company_time_master_id: ctm.id,present: e.present,month_name: month_name)
exit
e.present == "P"
e.shift_master_id == ctm.shift_master_id
exit
s1=MachineAttendance.create(employee_id: @emp_id,day: @day,in: 0,out: 0,shift_master_id: @shift_type,present: @present)
@in == "" && @out == ""
exit
@in == "" && @out == ""
@in == ""
exit
total_late_in_min = ea.late_mark.to_i + late_diff_in_min
late_diff_in_min
ea.late_mark.to_i
EXIT
exit
total_late_in_min = ea.late_mark.to_i + late_diff_in_min
late_diff_in_min
ea.late_mark.to_i
late_diff_in_min
ea.late_mark.nil?
exit
ea.late_mark
ctm.out_time.strftime('%H:%M:%S')
e.out.strftime('%H:%M:%S')
e.out.strftime('%H:%M:%S') < ctm.out_time.strftime('%H:%M:%S')
exit
exit\
e.employee_id
 @c2=EmployeeAttendance.create(employee_id: e.employee_id,day: e.day.to_date,in_time: e.in,out_time: e.out,machine_attendances_id: e.id,company_time_master_id: ctm.id,present: e.present,month_name: month_name)
  Company Load (0.3ms)  SELECT  "companies".* FROM "companies" WHERE "compa
  CompanyLocation Load (0.3ms)  SELECT  "company_locations".* FROM "company_locations" WHERE "company_locations"."id" = ? LIMIT 1  [["id", 1]]
  CACHE (0.0ms)  SELECT "members".* FROM "members" WHERE "members"."employee_id" = ?  [["employee_id", 1]]
id" = 1
reload!
exit
c
exit
s.min_amount.to_f
s.min_amount,
s
@total.to_f
exit
s.max_amount.to_f
s.min_amount.to_f
s.min_amount
@total.between?(s.min_amount, s.max_amount)
@total.to_f
@total
 @total.between?(s.min_amount, s.max_amount) && @month != "March" && @employee.company_location_id == s.company_location_id
s.basis_actual_amount == true
exit
c
@salaryslip.year
@salaryslip.month
year = @date.strftime("%Y")
month = @date.strftime("%B")
@date = plr.leave_date
exit
@employee_leav_balance.each
tp @employee_leav_balance = EmployeeLeavBalance.find_by(employee_id: @employee.id)
tp @salaryslip = Salaryslip.last
@salaryslip = Salaryslip.last
exit
@employee_leav_balance = EmployeeLeavBalance.find_by_employee_id(@employee.id)
@salaryslip = Salaryslip.last
