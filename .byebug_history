exit
tp @emp = Employee.find_by(id: @employee_template.employee_id)
@emp = Employee.find_by(id: @employee_template.employee_id)
exit
 select_tag 'manager_id[]',all_reporting_master_list
 select_tag 'manager_id[]',all_reporting_master_list,include_blank: " Select Manager"
 select_tag 'manager_id[]',all_reporting_master_list {include_blank: " Select Manager"}
 select_tag 'manager_id[]',all_reporting_master_list,{class: "form-control", hide_label: true,include_blank: " Select Manager"}
select_tag 'manager_id[]',all_reporting_master_list
all_reporting_master_list
manager_id[]
<%= select_tag 'manager_id[]',all_reporting_master_list,{class: "form-control", hide_label: true,include_blank: " Select Manager"} %>
exit
role_id
manager_id
manager_id[]
manager_id
select_tag 'manager_2_id[]',all_reporting_master_list1,{class: "form-control", hide_label: true,include_blank: " Select Manager"}
select_tag 'manager_id[]',all_reporting_master_list1,{class: "form-control", hide_label: true,include_blank: " Select Manager"}
manager_2_id[]
manager_id[]
exit
@managers.collect {|b| [b.employee.first_name.to_s+' '+b.employee.middle_name.to_s+' '+b.employee.last_name.to_s,b.employee_id]}
@managers.collect {|b| [b.employee.first_name+' '+b.employee.middle_name+' '+b.employee.last_name,b.employee_id]}
@managers.collect {|b| [b.employee.first_name]}
@managers.present?
:manager_id
@managers
@managers.present?  (@managers.collect {|b| [b.employee.first_name +' '+ b.employee.middle_name +' '+ b.employee.last_name]})
@managers.present?  (@managers.collect {|b| [b.employee.first_name+' '+b.employee.middle_name+' '+b.employee.last_name]})
@managers.present? ? (@managers.collect {|b| [b.employee.first_name+' '+b.employee.middle_name+' '+b.employee.last_name]})
@managers.present? ? (@managers.collect {|b| [b.employee.first_name+' '+b.employee.middle_name+' '+b.employee.last_name,b.employee_id]})
@managers.present? ? (@managers.collect {|b| [b.employee.first_name+' '+b.employee.middle_name+' '+b.employee.last_name,b.employee_id]}
exit
 select :employee,:manager_id
\
exit
tp Workingday.create(work_data_structure)
Workingday.create(work_data_structure)
@employees.each { |e| work_data_structure << params[e] }
exit
work_data_structure
@employees.each { |e| work_data_structure << params[e] }
params.permit!
@employees, @attendances, work_data_structure, @date = params[:employees], params[:attendances], [], params[:date]
exit
@employees, @attendances, work_data_structure, @date = params[:employees], params[:attendances], [], params[:date]
exit
absent_day_count = @c.to_f
present_day_count = @b.to_f + @c.to_f
@c = @a.to_f/2
@b = count.to_f - @a.to_f
@a = count.to_f - 2
count = exist.select {|k,v| v == "PG" }.count
b = count - a.to_f
b = count - a
a = count - 2
count = exist.select {|k,v| v == "PG" }.count
exit
@a = count - 2
count
if count <= 2
count = exist.select {|k,v| v == "PG" }.count
exit
count = exist.select {|k,v| v == "PG" }.count
exit
count = exist.select {|k,v| v == "PG" }.count
exit
count = exist.select {|k,v| v == "PG" }.count
exit
@employee = Employee.where(id: ex.cell(line,'A'))
exit
@employee = Employee.find_by_id(ex.cell(line,'A'))
exit
tp a=EmployerContribution.where(employee_id: s.employee_id,date: @salaryslips_1_date).pluck(:actual_bonus).map {|i| i.to_i}.inject{|n|}
a=EmployerContribution.where(employee_id: s.employee_id,date: @salaryslips_1_date).pluck(:actual_bonus).map {|i| i.to_i}.inject{|n|}
b=EmployerContribution.where(employee_id: s.employee_id,date: @salaryslips_1_date).pluck(:actual_pf).map {|i| i.to_i}.inject{|n|}
b
c
b
a
exit
sr1 = SalaryReport.collect_data(e,j,sl1)
continue
aaa
exit
exdit
final_emp_array & check_array
final_emp_array
final_array
check_array
(final_emp_array-check_array) | (check_array-final_emp_array)
aaa
exit
final_emp_array - @dd
@dd - final_emp_array
final_emp_array
@dd
exit
tp Employee.new
Emplyee.new\
tp @reports.first
tp @reports.first.code
@reports.first.code
@reports.first
@reports.first\
exit
final_emp_array
rep
SalaryReport.all
SalaryReport
sr1 = SalaryReport.collect_data(e,j,sl1)
