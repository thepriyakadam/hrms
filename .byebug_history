c
working_hrs = total_hrs/3600
total_hrs = out_time.to_time - in_time.to_time
total_hrs = out_time - in_time
in_time.to_f
out_time.to_f
total_hrs = out_time.to_f - in_time.to_f
comment = params[:employee_attendance][:comment]
present = params[:employee_attendance][:present]
out_time = params[:employee_attendance][:out_time]
in_time = params[:employee_attendance][:in_time]
c
type = params[:type]
type = params[:greeting][:type]
type = params[:type]
employee_id = params[:employee_id]
message = params[:greeting][:message]
c
employee_id = params[:employee_id]
message = params[:greeting][:message]
message = params[:message]
c
@greeting = Greeting.new
tp @employee = Employee.find(params[:format])
@employee = Employee.find(params[:format])
exit
c
time/3600
time = last_out_time.to_time - first_in_time.to_time
a/24
a * 24
a = time/360
time/360
time/360 * 24
time/360
time = last_out_time.to_time - first_in_time.to_time
time.to_time
last_out_time.to_datetime - first_in_time.to_datetime
time.to_time
time = last_out_time.to_time - first_in_time.to_time
last_out_time.to_time - first_in_time.to_time
first_in_time.to_time
last_out_time.to_time
last_out_time.to_time = first_in_time.to_time
(last_out_time.to_time)  (first_in_time.to_time)
last_out_time.to_time = first_in_time.to_time
first_in_time.to_time
last_out_time.to_time
last_out_time.to_time = first_in_time.to_time
last_out_time.to_time
last_out_time
last_out_time.to_datetime
first_in_time.to_f
last_out_time.to_f
exit
ezit
c
row.to_hash.slice(*row.to_hash.keys)
employee_attendance.attributes
employee_attendance.attributes = { "sr_no"=>"1.0", "date"=>Mon, 05 Jun 2017, "time"=>2000-01-01 00:01:34 UTC, "employee_code"=>"G5", "card_no"=>"0892296987", "employee_name"=>"Guard 5 Guard", "controller"=>"Controller 2", "reader_name"=>"Main Door Out", "access_status"=>"Access Granted", "created_at"=>nil, "updated_at"=>nil}
employee_attendance.attributes
row.to_hash.slice(*row.to_hash.keys)
employee_attendance.attributes
 employee_attendance.attributes == row.to_hash.slice(*row.to_hash.keys)
 employee_attendance.attributes = row.to_hash.slice(*row.to_hash.keys)
row.to_hash.slice(*row.to_hash.keys)
employee_attendance.attributes
employee_attendance.attribute
employee_attendance = find_by_id(row['id']) || new
employee_attendance
row = Hash[[header, spreadsheet.row(i)].transpose]
c
employee_attendance.attributes == row.to_hash.slice(*row.to_hash.keys)
row.to_hash.slice(*row.to_hash.keys)
employee_attendance.attributes
employee_attendance = find_by_id(row['id']) || new
row = Hash[[header, spreadsheet.row(i)].transpose]
(2..spreadsheet.last_row).each do |i|
header = spreadsheet.row(1)
exit
row = Hash[[header, spreadsheet.row(i)].transpose]
c
 c
c
row.keys.first.to_s
row.split(key)
row.keys.to_s
row.split(row.key.all)
row.split(row.key)
row.split(key)
row.keys.to_s
row[row.keys.to_sym]
row[row.keys.to_syn]
row[row.keys.to_sym]
row.keys.to_s
row.keys.all.to_s
row.keys.first.to_s
row.keys.join
row
row{"sr_no"=>5.0, "date"=>"05-Jun-2017", "time"=>"00:07:16", "employee_code"=>"G3", "card_no"=>"0892950827", "employee_name"=>"Guard 3 Guard", "controller"=>"Controller 3", "reader_name"=>"Emergency Out", "access_status"=>"Access Granted"}.to_s
row
row.spreadsheet.cell(i,'A')
row
row = Hash[[header, spreadsheet.row(i)].transpose]
employee_attendance.attributes
row == employee_attendance.attributes
row = Hash[[header, spreadsheet.row(i)].transpose]
employee_attendance.attributes
row == employee_attendance.attributes
row = Hash[[header, spreadsheet.row(i)].transpose]
employee_attendance = find_by_id(row['id']) || new
em =  employee_attendance.attributes
row
row.new
 header = spreadsheet.row(1)
row = Hash[[header, spreadsheet.row(i)].transpose] || new
header == row
row = Hash[[header, spreadsheet.row(i)].transpose]
 header = spreadsheet.row(1)
doc_nat  = spreadsheet.cell(i,'C')
lastname = spreadsheet.cell(i,'B')
sr_no     = spreadsheet.cell(i,'A')
c
row == em
em =  employee_attendance.attributes
row
em.inject{|v| v}
em =  employee_attendance.attributes
 employee_attendance.attributes
 employee_attendance.attributes == a
a = header.inject{|b| b}
header.inject{|b| b}
header.inject{|n| n}
header.attributes
header = spreadsheet.row(1)
 employee_attendance.attributes
employee_attendance = find_by_id(row['id']) || new
row = Hash[[header, spreadsheet.row(i)].transpose]
header = spreadsheet.row(1)
spreadsheet = open_spreadsheet(file)
file
c
@company_policy_type_id = params[:company_policy][:policy_type_id]
@company_policy_type_id = params[:company_policy][:company_policy_type_id]
     @name = params[:company_policy][:name]
c
file.attributes
file[:params]
file
 employee_attendance.attributes
c
tp @emp = Employee.find_by(id: employee_id)
@emp = Employee.find_by(id: employee_id)
present = params[:salary][:present]
present = params[:present]
day = params[:salary][:day]
employee_id = params[:salary][:employee_id]
employee_id = params[:employee_id]
c
tp last_record = DailyAttendance.last
c
@employee_leav_request.update(current_status: "Cancelled")
@employee_leav_request.update(current_status: "CancelAfterApproved")
tp @employee_leav_request
@employee_leav_request
c
 params[:leav_category_id] == @leav_id.inject{|n| n}
@leav_id.inject{|n| n}
params[:leav_category_id]
params[:leav_category_id]\
c
leav_category_id.inject{|n| n}
leav_category_id
leav_category_id.inject{n |n|}
leav_category_id.id
leav_category_id
params[:leav_category_id]
leav_category_id = @a.to_s.split('')
@a = @leav_category_id.id
tp @leav_category_id = LeavCategory.find_by(name: "C.Off")
c
@a = "leav_category_id.id"
@a = leav_category_id.id
@leav_category_id = @a.inject{|n| n}
@a = leav_category_id.id
leav_category_id.id
@leav_category_id = leav_category_id.inject{|n| n}
tp leav_category_id = LeavCategory.find_by(name: "C.Off")
c
@flag
 @leav_category_id.id
params[:leav_category_id]
 params[:leav_category_id] == @leav_category_id.id
tp @leav_category_id = LeavCategory.find_by(name: "C.Off")
@leav_category_id = LeavCategory.find_by(name: "C.Off")
c
 @holiday_id = params[:holiday_id]
c
@holiday_id = params[:holiday_id]
<th>Limit</th>
c
tp @leave_c_offs = @employee.leave_c_offs.order("id DESC")
tp @employee = Employee.find(@current_request.employee_id)
tp @current_request = LeaveCOff.find(params[:format])
@current_request = LeaveCOff.find(params[:format])
c
@report.travel_status == "Pending"
@report.status == true
tp c1 = @travel_request.total_advance - @travel_req.expense
c1 = @travel_request.total_advance - @travel_req.expense
tp  @report = ReportingMastersTravelRequest.where(travel_request_id: @travel_request.id).first
tp  @report = ReportingMastersTravelRequest.where(travel_request_id: @travel_request.id).first[2~
 @report = ReportingMastersTravelRequest.where(travel_request_id: @travel_request.id).first
tp @travel_req = TravelRequest.find_by(id: @travel_request.id)
c
tp @daily_bill_details = DailyBillDetail.where(travel_request_id: @travel_request.id,is_confirm: :1)
tp @daily_bill_details = DailyBillDetail.where(travel_request_id: @travel_request.id,is_confirm: :true)
tp @daily_bill_details = DailyBillDetail.where(travel_request_id: @travel_request.id)
tp @daily_bill_details = DailyBillDetail.where(travel_request_id: @travel_request.id,is_confirm: :true)
tp @travel_request = TravelRequest.find(params[:format])
tp @travel_request = TravelRequest.find(params[:format])[2~
@travel_request = TravelRequest.find(params[:format])
c
second_manager_id = employee.manager_2_id
first_manager_id = employee.manager_id
tp employee = Employee.where(id: reporting_master).take
employee = Employee.where(id: reporting_master).take
reporting_master = @rembursment.manager_id
tp @rembursment = Rembursment.find(params[:format])
@rembursment = Rembursment.find(params[:format])
