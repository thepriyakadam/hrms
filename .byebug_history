c
tp @employee_leav_bal
@employee_leav_bal
@employee_leav_bal.each do |e|
e.leav_category_id 
leave
exit
from_date.strftime('%B')
  @from_month = from_date.strftime('%B')
@from_date
from_date
e.from_date
@employee_leav_bal
e
exit
n
c
tp EmployeeLeavBalance.create(employee_id: e.employee_id,leav_category_id: e.leav_category_id,no_of_leave: @leave,from_date: e.to_date,to_date: date_monthly,is_active: true,expiry_date: date_monthly,total_leave: @leave.round,carry_forward: e.no_of_leave.to_f,leave_count: @calculated_no_of_leave,collapse_value: 0,working_day: payable_day)
EmployeeLeavBalance.create(employee_id: e.employee_id,leav_category_id: e.leav_category_id,no_of_leave: @leave,from_date: e.to_date,to_date: date_monthly,is_active: true,expiry_date: date_monthly,total_leave: @leave.round,carry_forward: e.no_of_leave.to_f,leave_count: @calculated_no_of_leave,collapse_value: 0,working_day: payable_day)
EmployeeLeavBalance.create(employee_id: e.employee_id,leav_category_id: e.leav_category_id,no_of_leave: @leave.round(2),from_date: e.to_date,to_date: date_monthly,is_active: true,expiry_date: date_monthly,total_leave: @leave.round,carry_forward: e.no_of_leave.to_f,leave_count: @calculated_no_of_leave.round(2),collapse_value: 0,working_day: payable_day)
                            e.update(is_active: false)
EmployeeLeavBalance.create(employee_id: e.employee_id,leav_category_id: e.leav_category_id,no_of_leave: @leave.round(2),from_date: e.to_date,to_date: date_monthly,is_active: true,expiry_date: date_monthly,total_leave: @leave.round,carry_forward: e.no_of_leave.to_f,leave_count: @calculated_no_of_leave.round(2),collapse_value: 0,working_day: payable_day)
n
 @employee_leav_balance.is_present
  if @employee_leav_balance.is_present
  if @employee_leav_balance.is_present(e)
leav_category_id
leav_category_id: leav_category_id
leav_category_id: e.leav_category_id,
@leave <= @leave_master.limit.to_f
 @leave = @leave_master.no_of_leave.to_f + e.no_of_leave.to_f
@leave_master.is_carry_forward == true
@leave_master.working_day == nil
tp EmployeeLeavBalance.create(employee_id: e.employee_id,leav_category_id: e.leav_category_id,no_of_leave: @leave.round(2),from_date: e.to_date,to_date: date_monthly,expiry_date: date_monthly,is_active: true,total_leave: @leave,carry_forward: e.no_of_leave,leave_count: @leave_master.no_of_leave,collapse_value: 0,working_day: payable_day)
EmployeeLeavBalance.create(employee_id: e.employee_id,leav_category_id: e.leav_category_id,no_of_leave: @leave.round(2),from_date: e.to_date,to_date: date_monthly,expiry_date: date_monthly,is_active: true,total_leave: @leave,carry_forward: e.no_of_leave,leave_count: @leave_master.no_of_leave,collapse_value: 0,working_day: payable_day)
c
@to = params[:salary][:to_date]
@from = params[:salary][:from_date]
c
@day = params[:salary][:day]
c
@day = params[:salary][:day]
c
@reporting_master_id
reporting_master_id
@manager_id
manager_id
@reporting_master2
@email
email
@reporting_master
tp @reporting_master = Employee.find(@employee_resignation.reporting_master_id)
tp @employee1 = Employee.find(@employee_resignation.employee_id)
 @employee1 = Employee.find(@employee_resignation.employee_id)
tp @employee_resignation = EmployeeResignation.find(employee_resignation.id)
c
tp @joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
@joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
tp @employee = Employee.find_by(id: current_user.employee_id)
c
tp Employee.find_by(id: current_user.employee_id)
Employee.find_by(id: current_user.employee_id)
@employee = Employee.find(id: current_user.employee_id)
tp @employee = Employee.find(params[:id])
@joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
tp @employee = Employee.find(params[:id])
 @employee = Employee.find(params[:id])
continue
@employee_resignation.employee.manager_2_id.nil?
n
c
@employee = params[:employee_id]
JoiningDetail.find(params[:id])
JoiningDetail.where(params[:id])
JoiningDetail.find_by(params[:id])
JoiningDetail.find(params[:id])
tp @employee_resignation = Employee.find(params[:manual_employee_code])
tp @employee_resignation = Employee.find_by(params[:manual_employee_code])
tp @employee_resignation = Employee.find_by(:manual_employee_code)
Employee
Employee.find(params[:employee_id])
tp @employee_resignation = Employee.find(params[:employee_id]).pluck(id)
tp @employee_resignation = Employee.find(params[:employee_id]).to_i
tp @employee_resignation = Employee.find(params[:employee_id])
tp @employee_resignation = Employee.find_by(params[:employee_id])
tp @employee_resignation = EmployeeResignation.find_by(params[:employee_id])
@employee_resignation = EmployeeResignation.find_by(params[:employee_id])
@employee_resignation = EmployeeResignation.find(params[:employee_id])
@employee_resignation = params[:employee_id].to_s
@employee_resignation = params[:employee_id].to_i
@employee_resignation
params[:employee_id]
@employee_resignation = params[:employee_id]
@employee_resignation = params[:employee_resignation][:employee_id]
params
@employee_resignation = params[:employee_id]
@employee_
 @employee_resignation = params([:employee_id])
 @employee_resignation = params(params[:employee_id])
 @resignation_date = params[:resignation_date]
 @employee = Employee.find_by(params[:id])
 @employee = Employee.find_by(params[:id]).take
 @employee = Employee.find(params[:id]).take
 @employee = Employee.find(params[:id]).take'
 @employee = Employee.find(params[:id])
 @employee = Employee.find(params[:employee_id])
c
Employee.where(params[:id]).take
@joining_detail = JoiningDetail.find_by_employee_id(@employee)
@joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
Employee.where(params[:format])
Employee.where(params[:id]).pluck(id)
Employee.where(params[:id])
Employee.find_by(params[:id])
Employee.find_by(params[:format])
Employee
 @employee 
@notice_period_after_probation = @joining_detail.notice_period_after_probation
 @employee = Employee.find(params[:format])
 @employee = Employee.find(params[:formate])
 @employee = Employee.find(params[:format])
@joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
@resignation_date = params[:resignation_date]
 @employee = Employee.find(params[:id])
tp @employee = Employee.find(params[:employee_id])
tp @employee = Employee.find(params[:id])
 @employee = Employee.find(params[:id])
c
 @resignation_date = params[:resignation_date]
tp @employee = Employee.find(params[:id])
 @employee = Employee.find(params[:id])
c
 @employee = Employee.find(params[:format])
@joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
 @notice_period_after_probation = @joining_detail.notice_period_after_probation
tp @joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
 resignation_date = params[:resignation_date]
c
@notice_period_after_probation = @joining_detail.notice_period_after_probation
tp @joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
@joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
resignation_date = params[:resignation_date]
 @employee = Employee.find_by(params[:format])
 @employee = Employee.find(params[:format])
 @employee = Employee.find(params[:id])
c
notice_period_after_probation = @joining_detail.notice_period_after_probation
resignation_date = params[:resignation_date]
c
notice_period_after_probation
notice_period_after_probation = @notice_period
d = resignation_date.to_date + notice_period_after_probation
@notice_period
 notice_period_after_probation
 notice_period_after_probation = @notice_period
resignation_date = params[:resignation_date]
c
 @exit_interview_date = params[:employee_resignation][:exit_interview_date]
 @employee_resignation = EmployeeResignation.find(params[:resignation_id])
employee_resignation
c
@emp_resig = EmployeeResignation.find(params[:format])
exit
@settled_on = params[:employee_resignation][:settled_on]
@settled_on = params[:settled_on]
tp @emp_resig = EmployeeResignation.find_by(params[:resignation_id])
@emp_resig = EmployeeResignation.find_by(params[:resignation_id])
exit
exi
exit
@settled_on = params[:settled_on]
@emp_resig = EmployeeResignation.find_by(params[:format])
@employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
c
@employees = Employee.where(manager_id: @emp).where(@employee_id =! @manager_id).count
@employees = Employee.where(manager_id: @emp).where(@employee_id != @manager_id).count
@manager_id = @emp.manager_id
@employee_id = @emp.id
@employees = Employee.where(manager_id: @emp).where(@employee_id == @manager_id).count
@employees = Employee.where(manager_id: @emp).where.not(@employee_id == @manager_id).count
@employees = Employee.where(manager_id: @emp).where.not(@employee_id = @manager_id).count
@employees = Employee.where(manager_id: @emp).where.not.(@employee_id = @manager_id).count
@employees = Employee.where(manager_id: @emp).where.not(@employee_id = @manager_id).count
@employees = Employee.where(manager_id: @emp).where(@employee_id = @manager_id).count
@employees = Employee.where(manager_id: @emp).where.not(@employee_id = @manager_id).count
@manager_id = @emp.manager_id
@employee_id = @emp.id
@employees = Employee.where(manager_id: @emp).count
@employees = Employee.where(manager_id: @emp)
@employees = Employee.where(manager_id: @emp).where.not(id: == manager_id:).count
@employees = Employee.where(manager_id: @emp).where.not(id: = manager_id:).count
@employees = Employee.where(manager_id: @emp).where.not(:id = :manager_id).count
@employees = Employee.where(manager_id: @emp).where.not(:id = manager_id).count
@employees = Employee.where(manager_id: @emp).count
@employees = @emp.subordinates.count
@employees = @emp.subordinates
  @emp = Employee.
  @emp = Employee.find(current_user.employee_id)
c
(settled_on: params)
 @employee_resignation.update(settled_on: params)
 @employee_resignation.update_all(settled_on: params)
 @employee_resignation.update(settled_on: params)
c
 params
 params[settled_on]
 params
 params[settled_on]
@settled_on = params[settled_on:]
@settled_on = params[:settled_on]
 @employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
@employee_resignation
c
 @settled_on = params[:settled_on].to_date
 @settled_on = params[:settled_on]
c
@settled_on = params[:settled_on] || params[:employee_resignation][:settled_on]
@settled_on = params[:settled_on] AND params[:employee_resignation][:settled_on]
@settled_on = params[:settled_on] OR params[:employee_resignation][:settled_on]
@settled_on = params[:settled_on] || params[:employee_resignation][:settled_on]
c
params
@settled_on = params[:settled_on]
c
tp @employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
 @employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
c
tp EmployeeResignation.create(settled_on: @settled_on)
 EmployeeResignation.create(settled_on: @settled_on)
 @settled_on = params[:settled_on]
@employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved",settled_on: nil)
c
@employee_resignation = EmployeeResignation.find(params[:id])
@employee_resignation = EmployeeResignation.find(params[]:id)
@settled_on = params[:employee_resignation][:settled_on]
c
params
c
 @employee_resignation.update(settled_on: @settled_on)
@settled_on = params[:settled_on]
@employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
'=> 517:     @employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
c
 @settled_on = params[:employee_resignation] ? params[:employee_resignation][:settled_on] : params[:settled_on]
 @settled_on = params[:employee_resignation] ? params[:employee_resignation][:settled_on] : params[:employee_resignation]
 @settled_on = params[:employee_resignation] ? params[:settled_on] : params[:employee_resignation]
 @settled_on = params[:employee_resignation][:settled_on]
 @settled_on = params[:settled_on]
c
@employee_resignation.update(settled_on: @settled_on)
@settled_on = params[:employee_resignation][:settled_on].to_date
@settled_on = params[:employee_resignation][:settled_on]
@settled_on = params[:settled_on]
  @employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
c
@employee_resignation.update_all(settled_on: @settled_on) 
