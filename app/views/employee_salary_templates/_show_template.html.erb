<br>
<div class="table-responsive">
<table class="table table-bordered table-hover table-condensed">
  <thead>
    <tr>
      <th>Sr No.</th>
      <th>Salary component</th>
      <th>Is deducted</th>
      <th>Parent salary component</th>
      <th>Percentage</th>
      <th>Is taxable</th>
      <th>Tax</th>
      <th>Base</th>
      <th>To be paid</th>
      <th>Max amount</th>
      <th>Monthly amount</th>
      <th>Annual amount</th>
	  </tr>
  </thead>

  <tbody>
  	<% i = 0 %>
  	<%= form_for :table do |f| %>
    <% @employee_salary_templates.each do |template| %>
      <tr>
        <td><%= i=i+1 %></td>
        <td><%= template.try(:salary_component).try(:name) %></td>
        <td><%= template.try(:is_deducted) %></td>
        <td><%= select :parent_salary_component_id,template.id, all_salary_component,{prompt: true}, class: 'form-control'%></td>
        <td><%= text_field :percentage,template.id, value: template.try(:percentage), class: "ravi" %></td>
        <td><%= template.try(:is_taxable) %></td>
        <td><%= text_field :tax,template.id, value: template.try(:tax),class: "ravi" %></td>
        <td><%= template.try(:base) %></td>
        <td><%= template.try(:to_be_paid) %></td>
        <td><%= text_field :max_amount,template.id, value: template.try(:max_amount),class: "ravi" %></td>
        <td><%= text_field :monthly_amount,template.id, value: template.try(:monthly_amount),class: "ravi" %></td>
        <td><%= text_field :annual_amount,template.id, value: template.try(:annual_amount),class: "ravi" %></td>
      </tr>
    <% end %>
    <% end %>
  </tbody>
</table>
</div>

<style type="text/css">
	.ravi {
    display: block;
    width: 100%;
    height: 30px;
    padding: 6px 8px;
    font-size: 12px;
    line-height: 1.42857143;
    color: #555;
    background-color: #fff;
    background-image: none;
    border: 1px solid #ccc;
    border-radius: 0;
    -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);
    box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);
    -webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
    -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
}

.table-condensed>thead>tr>th, .table-condensed>tbody>tr>th, .table-condensed>tfoot>tr>th, .table-condensed>thead>tr>td, .table-condensed>tbody>tr>td, .table-condensed>tfoot>tr>td {
    padding: 1px;
}
</style>

<script type="text/javascript">
  <% @employee_salary_templates.each do |item| %>
  
    $(function(){
      $('#monthly_amount_<%=item.id%>').on('input', function() {
        calculate_annual_salary();
        calculate_percentage_on_month();
        $('#error<%=item.id%>').html("<p>You are typing</p>")
      });
      $('#annual_amount_<%=item.id%>').on('input', function() {
        calculate_monthly_salary();
        calculate_percentage_on_annual();
      });
      $('#percentage_<%=item.id%>').on('input', function() {
        calculate_monthly_and_annual_salary();
      });
      $('#parent_salary_component_id_<%=item.id%>').on('change', function() {
          enabled_percentage_textbox();
      });
      $('#is_taxable_<%=item.id%>').on('change', function() {
          enabled_tax_textbox();
      });
      function calculate_annual_salary(){
        var monthly_amount = parseFloat($('#monthly_amount_<%= item.try(:id) %>').val()); 
        
        var annual_amount = "";
        if(isNaN(monthly_amount)){
          annual_amount = " ";
        }
        else {
          annual_amount = (monthly_amount*12).toFixed(2);
        }
        $('#annual_amount_<%= item.try(:id) %>').val(annual_amount);
      }
      function calculate_monthly_salary(){
        var annual_amount = parseInt($('#annual_amount_<%= item.try(:id) %>').val()); 
        
        var monthly_amount = "";
        if(isNaN(annual_amount)){
          monthly_amount = " ";
        }
        else {
          monthly_amount = (annual_amount / 12).toFixed(2);
        }
        $('#monthly_amount_<%= item.try(:id) %>').val(monthly_amount);
      }
      function calculate_percentage_on_month(){
        var monthly_amount = parseInt($('#monthly_amount_<%= item.try(:id) %>').val()); 
        
        var parent_salary_component_id = parseInt($("#parent_salary_component_id_<%= item.try(:id) %>").val());
        var parent_salary_component_monthly_amount = parseInt($("#monthly_amount_"+parent_salary_component_id).val());
        var percentage = "";
        if(isNaN(monthly_amount) || isNaN(parent_salary_component_monthly_amount)){
          percentage = " ";
        }
        else {
          percentage = ((monthly_amount/parent_salary_component_monthly_amount)*100).toFixed(2);
        }
        $('#percentage_<%= item.try(:id) %>').val(percentage);
      }
      function calculate_percentage_on_annual(){
        var annual_amount = parseInt($('#annual_amount_<%= item.try(:id) %>').val()); 
        var monthly_amount = (annual_amount / 12).toFixed(2);
        var parent_salary_component_id = parseInt($("#parent_salary_component_id_<%= item.try(:id) %>").val());
        var parent_salary_component_monthly_amount = parseInt($("#monthly_amount_"+parent_salary_component_id).val());
        var percentage = "";
        if(isNaN(monthly_amount) || isNaN(parent_salary_component_monthly_amount)){
          percentage = " ";
        }
        else {
          percentage = ((monthly_amount/parent_salary_component_monthly_amount)*100).toFixed(2);
        }
        $('#percentage_<%= item.try(:id) %>').val(percentage);
      }
      function calculate_monthly_and_annual_salary(){
        var percentage = parseInt($('#percentage_<%= item.try(:id) %>').val()); 
        var parent_salary_component_id = parseInt($("#parent_salary_component_id_<%= item.try(:id) %>").val());
        var parent_salary_component_monthly_amount = parseInt($("#monthly_amount_"+parent_salary_component_id).val());
        //alert(parent_salary_component_monthly_amount)
        var monthly_amount = "";
        var annual_amount = "";
        if(isNaN(percentage) || isNaN(parent_salary_component_monthly_amount)){
          monthly_amount = " ";
          annual_amount = " ";
        }
        else {
          monthly_amount = (percentage * parent_salary_component_monthly_amount / 100).toFixed(2);
          annual_amount = ((percentage * parent_salary_component_monthly_amount / 100)*12).toFixed(2);
        }
        $('#monthly_amount_<%= item.try(:id) %>').val(monthly_amount);
        $('#annual_amount_<%= item.try(:id) %>').val(annual_amount);
      }
      function enabled_percentage_textbox(){
        var parent_salary_component_id = parseInt($("#parent_salary_component_id_<%= item.try(:id) %>").val());
        if(isNaN(parent_salary_component_id)){
          $("#percentage_<%= item.try(:id) %>").prop('disabled', true);
        }
        else {
          $("#percentage_<%= item.try(:id) %>").prop('disabled', false);
        }
      }
      
      function enabled_tax_textbox(){
        var is_taxable = ($("#is_taxable_<%= item.try(:id) %>").val());
        if(is_taxable == "Yes"){
          $("#tax_<%= item.try(:id) %>").prop('disabled', false);
        }
        else {
          $("#tax_<%= item.try(:id) %>").prop('disabled', true);
        }
      }
    });
  <% end %>
</script>