<table class="table table-bordered table-hover table-condensed">
  <thead>
    <tr>
      <th>Employee Code</th>
      <td><%= @employee.manual_employee_code%></td>
      <th>Employee Name</th>
      <td><%= full_name(@employee) %></td>
      <th>Designation</th>
      <td><%= @employee.joining_detail.try(:designation) %></td>
    </tr>
  </thead>
  <tbody>
  	<tr>
  	  <th>Employement</th>
  		<td><%= @employee.employee_type.try(:name) %></td>
  		<th>Contact No</th>
  		<td><%= @employee.contact_no %></td>
  		<th>Week Off</th>
  		<td><%= @working_day.try(:week_off_day) %></td>
  	</tr>
  	<tr>
      <th>Month Day</th>
      <td align="right"><%= @working_day.try(:day_in_month) %></td>
      <th>Holidays</th>
      <td align="right"><%= @working_day.try(:holiday_in_month) %></td>
      <th>Leave Total</th>
      <td align="right"><%= @working_day.try(:cl_leave) %></td>
		</tr>
		<tr>
			<th>Working Days</th>
			<td align="right"><%= @working_day.try(:present_day) %></td>
			<th>Absent Days</th>
			<td align="right"><%= @working_day.try(:absent_day) %></td>
			<th>Payble Days</th>
			<td align="right"><%= @working_day.try(:payable_day) %></td>
		</tr>
  </tbody>
</table>
<div id="myModal"></div>
<div class="row">
  <div class="col-sm-6">
    <table class="table table-bordered table-hover table-condensed">
      <thead>
        <tr>
          <th>Particular</th>
          <th>Actual Amount</th>
          <th>Calculated Amount</th>
        </tr>
      </thead>
	    <% addable_total_actual_amount = 0 %>
	    <% addable_total_calculated_amount = 0 %>
	    <% basic_actual_amount = 0 %>
	    <% basic_calculated_amount = 0 %>
	    <% da_actual_amount = 0 %>
	    <% da_calculated_amount = 0 %>

	    <% @addable_salary_items.try(:each) do |item| %>
	      <% addable_calculated_amount = 0 %>
	      <% @template_id = item.salary_template_id %>
	      <% addable_actual_amount = item.monthly_amount %>
	      <% unless addable_actual_amount.nil? %>
	        <% addable_calculated_amount = addable_actual_amount / @working_day.day_in_month * @working_day.payable_day %>
	      <% else %>
	        <% addable_actual_amount = 0 %>
	        <% addable_calculated_amount = 0 %>
	      <% end %>
	      <% addable_total_actual_amount = addable_total_actual_amount + addable_actual_amount %>
	      <% addable_total_calculated_amount = addable_total_calculated_amount + addable_calculated_amount %>
	      <tr>
	        <td><%= item.salary_component.name %></td>
	        <td align="right">
            <%= addable_actual_amount.round %>
            <%= link_to "", edit_employee_salary_template_path(item),remote:true,class: "fa fa-edit" %>
          </td>
	        <td align="right"><%= addable_calculated_amount.round %></td>
	      </tr>  
	      <% if item.salary_component.name == "Basic" %>
	        <% basic_actual_amount = addable_actual_amount %>
	        <% basic_calculated_amount = addable_calculated_amount %>
	      <% elsif item.salary_component.name == "DA" %>
	        <% da_actual_amount = addable_actual_amount %>
	        <% da_calculated_amount = addable_calculated_amount %>
	      <% end %>
	    <% end %> <!-- Addable end -->
	    
	    <tr bgcolor="#8CD0F8">
	      <td>Total</td>
	      <td align="right"><%= addable_total_actual_amount.round %></td>
	      <td align="right"><%= addable_total_calculated_amount.round %></td>
	    </tr>

	    <% formula_item_actual_amount = 0 %>
	    <% formula_item_calculated_amount = 0 %>
	    <% formula_total_actual_amount = 0 %>
	    <% formula_total_calculated_amount = 0 %>
	    <% deducted_actual_amount = 0 %>
	    <% deducted_calculated_amount = 0 %>
	    <% deducted_total_actual_amount = 0 %>
	    <% deducted_total_calculated_amount = 0 %>

	    <% @deducted_salary_items.try(:each) do |item| %>
	      <% deducted_item_name = item.salary_component.name %>
	      <% case deducted_item_name %>
	      <% when "ESIC" %>
	        <% master_esic = EsicMaster.first %>
          <% unless master_esic.nil? %>
  	        <% if master_esic.esic and addable_total_calculated_amount <= master_esic.max_limit and @employee.joining_detail.have_esic %>
  	          <% formula_string = master_esic.base_component.split(",") %>
  	          <% formula_string.try(:each) do |f| %>
  	            <% formula_item = @addable_salary_items.where(salary_component_id: f.to_i).take %>
  	            <% formula_item_actual_amount = formula_item.monthly_amount %>
  	            <% formula_item_actual_amount = 0 if formula_item_actual_amount.nil? %>
  	            <% formula_total_actual_amount = formula_total_actual_amount + formula_item_actual_amount %>
  	            <% formula_item_calculated_amount = formula_item_actual_amount / @working_day.try(:day_in_month) * @working_day.try(:payable_day) %>
  	            <% formula_total_calculated_amount = formula_total_calculated_amount + formula_item_calculated_amount %>
  	          <% end %>
  	          <% deducted_actual_amount = (formula_total_actual_amount / 100 * master_esic.percentage).ceil %>
  	          <% deducted_calculated_amount = (formula_total_calculated_amount / 100 * master_esic.percentage).ceil %>
  	        <% else %>
  	          <% deducted_actual_amount = 0 %>
  	          <% deducted_calculated_amount = 0 %>
  	        <% end %> <!-- esic end -->
          <% end %> <!-- esic unless end --> 
	        
	      <% when "Prof. Tax" %>
	        <% if addable_total_actual_amount > 15000 %>
	          <% if @month == "March" %>
	            <% deducted_actual_amount = 212 %>
	            <% deducted_calculated_amount = 212 %>
	          <% else %>
	            <% deducted_actual_amount = 208 %>
	            <% deducted_calculated_amount = 208 %>
	          <% end %>
	        <% else %>
	          <% deducted_actual_amount = 0 %>
	          <% deducted_calculated_amount = 0 %>
	        <% end %> <!-- prof_tax_end -->

	      <% when "PF" %>
	        <% direct_allowence_id = SalaryComponent.find_by_name("DA").id %>
	        <% direct_allowence = @addable_salary_items.where(salary_component_id: direct_allowence_id).take.monthly_amount.to_f %>
	        <% if direct_allowence.nil? or direct_allowence == 0 %>
	          <% if @employee.joining_detail.select_pf == "Yes" %>
	            <% deducted_actual_amount = basic_actual_amount / 100 * 12 %>
	            <% deducted_calculated_amount = basic_calculated_amount / 100 * 12 %>
	          <% elsif @employee.joining_detail.select_pf == "Limit" %>
	            <% deducted_actual_amount = @employee.joining_detail.pf_max_amount.to_f / 100 * 12 %>
	            <% deducted_calculated_amount = deducted_actual_amount %>
	          <% else %>
	            <% deducted_actual_amount = 0 %>
	            <% deducted_calculated_amount = 0 %>
	          <% end %>
	        <% else %>
	          <% deducted_actual_amount = (basic_actual_amount + da_actual_amount) / 100 * 12 %>
	          <% deducted_calculated_amount = (basic_calculated_amount + da_calculated_amount) / 100 * 12 %>
	        <% end %> <!-- pf end -->

	      <% else %>
	        <% if item.monthly_amount.nil? %>
	          <% deducted_actual_amount = 0 %>
	          <% deducted_calculated_amount = 0 %>
	        <% else %>
	          <% deducted_actual_amount = item.monthly_amount %>
	          <% deducted_calculated_amount = deducted_actual_amount %>
	        <% end %>  
	      <% end %> <!-- switch case end -->

	      <% deducted_total_actual_amount = deducted_total_actual_amount + deducted_actual_amount %>
	      <% deducted_total_calculated_amount = deducted_total_calculated_amount + deducted_calculated_amount %>
	      <tr>
	        <td><%= item.salary_component.name %></td>
	        <td align="right">
            <%= deducted_actual_amount.round %>
            <%= link_to "", edit_employee_salary_template_path(item),remote:true,class: "fa fa-edit" %>
          </td>
	        <td align="right"><%= deducted_calculated_amount.round %></td>
	      </tr>
	    <% end %> <!-- deducted_salary_items loop -->

      <% @instalment_array.try(:each) do |ia| %>
        <tr>
          <% deducted_actual_amount = ia.instalment_amount %>
          <% deducted_calculated_amount = deducted_actual_amount %>
          <td>Advance</td>
          <td align="right"><%= deducted_actual_amount %></td>
          <td align="right"><%= deducted_calculated_amount %></td>
          <% deducted_total_actual_amount = deducted_total_actual_amount + deducted_actual_amount %>
          <% deducted_total_calculated_amount = deducted_total_calculated_amount + deducted_calculated_amount %>
        </tr>
      <% end %>

      <% @retention = RetentionMoney.first %>
      <% unless @retention.nil? %>
        <% if @retention.have_retention and @employee.joining_detail.have_retention %>
          <% unless @employee.employee_type.name == "Confirmed" %>
            <tr>
              <% deducted_actual_amount = 0 %>
              <% deducted_calculated_amount = 1000 %>
              <td>Retention</td>
              <td align="right"><%= deducted_actual_amount %></td>
              <td align="right"><%= deducted_calculated_amount %></td>
              <% deducted_total_actual_amount = deducted_total_actual_amount + deducted_actual_amount %>
              <% deducted_total_calculated_amount = deducted_total_calculated_amount + deducted_calculated_amount %>
            </tr>
          <% end %>  
        <% end %>
      <% end %>
      
      <% date = Date.new(@year.to_i, Workingday.months[@month])%>
      <% @food_deduction = FoodDeduction.where(food_date: date, employee_id: @employee.id).take %>
      <% unless @food_deduction.nil? %>
        <tr>
          <% deducted_actual_amount = 0 %>
          <% deducted_calculated_amount = @food_deduction.amount %>
          <td>Food Deduction-</td>
          <td align="right"><%= deducted_actual_amount %></td>
          <td align="right"><%= deducted_calculated_amount %></td>
          <% deducted_total_actual_amount = deducted_total_actual_amount + deducted_actual_amount %>
          <% deducted_total_calculated_amount = deducted_total_calculated_amount + deducted_calculated_amount %>
        </tr>
      <%end%>
    
      <% @monthly_expences = MonthlyExpence.where(employee_id: @employee.id, expence_date: date.all_month)%>
      <% @monthly_expences.try(:each) do |m| %>
        <tr>
          <% deducted_actual_amount = 0 %>
          <% deducted_calculated_amount = m.amount %>
          <td><%= m.expencess_type.name%>-</td>
          <td align="right"><%= deducted_actual_amount %></td>
          <td align="right"><%= deducted_calculated_amount %></td>
          <% deducted_total_actual_amount = deducted_total_actual_amount + deducted_actual_amount %>
          <% deducted_total_calculated_amount = deducted_total_calculated_amount + deducted_calculated_amount %>
        </tr>
      <%end%>

	    <tr bgcolor="#F88CA3">
	      <td>Total Deduction</td>
	      <td align="right"><%= deducted_total_actual_amount.round %></td>
	      <td align="right"><%= deducted_total_calculated_amount.round %></td>
	    </tr>
	    <tr>
	      <td>Net Salary</td>
	      <td align="right"><%= (addable_total_actual_amount - deducted_total_actual_amount).round %></td>
	      <td align="right"><%= (addable_total_calculated_amount - deducted_total_calculated_amount).round %></td>
	    </tr>
	  </table>
  </div>
  <% unless @arrear_items.nil? %>
    <div class="col-sm-6">
      <table class="table table-bordered table-hover table-condensed">
        <thead>
          <tr>
            <th>Arrears</th>
            <th>Actual Amount</th>
            <th>Calculated Amount</th>
          </tr>
        </thead>
        <tbody>
          <% total_arrear_amount = 0 %>
          <% @arrear_items.each do |a| %>
            <tr>
              <td><%= a.salary_component.name %></td>
              <td><%= a.actual_amount %></td>
              <% arrear_calculated_amount = ((a.actual_amount/30) * @total_payable_days).round %>
              <td><%= arrear_calculated_amount %></td>
              <% total_arrear_amount = total_arrear_amount + arrear_calculated_amount%>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
    Net Salary + Arrear = <%= total_arrear_amount + ((addable_total_calculated_amount - deducted_total_calculated_amount).round)%>
  <% end %>
</div>

<%= form_for :data, url: {controller: 'salaryslips', action: 'save_data',	employee: @employee, month: @month,	year: @year } do |f| %>
	<%= f.submit class: "btn btn-primary btn-sm" %>
<% end %>