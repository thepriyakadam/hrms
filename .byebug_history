exit
Workingday.exists?(employee_id: e.employee_id,month_name: from_month,year: from_year)
from_month = from_date.strftime('%B')
 from_date = e.from_date
exit
to_date = self.to_date
from_date = self.from_date
c
@employee_leav_balance.emp_available(e,@from_month,@from_year)
c
 emp_available(e,@from_month,@from_year)
exit
emp_available(e,@from_month,@from_year)
exit
tp EmployeeAttendance.where("strftime('%m/%Y', day) = ? AND employee_id = ?", @date.strftime('%m/%Y'),4606)
EmployeeAttendance.where("strftime('%m/%Y', day) = ? AND employee_id = ?", @date.strftime('%m/%Y'),4606)
 @emp1 = params[:employees]
@date = Date.new(@year.to_i, Workingday.months[@month])
@year = params[:year]
@month = params[:month]
exit
employee.update_attributes(manager_id: @manager1)
@manager1 = manager_id.inject{|n| n}
manager_id = params[:manager_id]
exit
manager_id: manager_id
employee.update_attributes(manager_id: manager_id, manager_2_id: manager_2_id)
mployee.update_attributes(manager_id: manager_id, manager_2_id: manager_2_id)
 manager_2_id = params[:manager_2_id]
manager_id = params[:manager_id]
exit
e.employee.status
e.employee_id
 e
exit
tp  @employee_leav_bal = EmployeeLeavBalance.where("to_date <= ? AND is_active = ?", Date.today, true)
 @employee_leav_bal = EmployeeLeavBalance.where("to_date <= ? AND is_active = ?", Date.today, true)
c
@to_day.inject{|n| n}
 @leave_master.working_day.to_f
 @from_day.inject{|n| n}
c
[5, 1, 7 ,8].inject{|n| n}
[5, 1, 7 ,8].inject{|n, d| n * 10 + d}
@from_day.to_i
@from_day.map {|i| i.to_i}
@from_day
c
@leave_master.working_day.to_f
@leave_master.working_day
@from_day.to_i
@from_day.to_f
@from_day
exit
@from_day
@from_day.to_f
exit
@leave_master.working_day
@from_day
exit
@from_day => @leave_master.working_day
 @leave_master.working_day
@from_day
@from_day.to_i 
@from_day.to_f 
@from_day
@from_day => @leave_master.working_day 
if @from_day => @leave_master.working_day && @to_date => @leave_master.working_da
@from_day => @leave_master.working_day && @to_date => @leave_master.working_day
@from_day >= @leave_master.working_day && @to_date >= @leave_master.working_day
@from_day
EmployeeAttendance.where("strftime('%m/%Y', day) = ? AND employee_id = ?", @date,4607)
EmployeeAttendance.where("strftime('%m/%Y', day) = ? AND employee_id = ?", '2016-12-01',4607)
tp EmployeeAttendance.where("day = ? AND employee_id = ?", '2016-12-01',4607)
EmployeeAttendance.where("day = ? AND employee_id = ?", '2016-12-01',4607)
EmployeeAttendance.where("strftime('%m/%Y', day) = ? AND employee_id = ?", '2016-12-01',4607)
@date.to_date
EmployeeAttendance.where("strftime('%m/%Y', day) = ? AND employee_id = ?", @date,4607)
EmployeeAttendance.where("strftime('%m/%Y', day) = ? AND employee_id = ?", @date.to_date,4607)
@date
@emp1
exit
EmployeeAttendance.where("strftime('%m/%Y', day) = ? AND employee_id = ?", @date.to_date,4616)
tp EmployeeAttendance.where(day: @date)
EmployeeAttendance.where(day: @date)
EmployeeAttendance.where("strftime('%m/%Y', day) = ? ", @date)
EmployeeAttendance.where("strftime('%m/%Y', day) = ? AND employee_id = ?", @date.to_date,4616)
EmployeeAttendance.where("strftime('%m/%Y', day) = ? AND employee_id = ?", @date,4616)
@emp1 = params[:employees]
 @date = params[:date]
tp EmployeeAttendance.where("strftime('%m/%Y', day) = ? AND employee_id = ?", @date,x)
EmployeeAttendance.where("strftime('%m/%Y', day) = ? AND employee_id = ?", @date,x)
exit
@from_day = @workingday_from.pluck(:present_day)
tp @workingday_from = Workingday.where(employee_id: e.employee_id,month_name: @from_month,year: @from_year)
tp @from_day = @workingday_from.pluck(:present_day)
@from_day = @workingday_from.pluck(:present_day)
@workingday_from = Workingday.where(employee_id: e.employee_id,month_name: @from_month,year: @from_year)
@to_year = to_date.strftime('%Y')
@to_month = to_date.strftime('%B')
@from_year = from_date.strftime('%Y')
 @from_month = from_date.strftime('%B')
to_date = e.to_date
from_date = e.from_date
exit
 @workingday_from.pluck(:payable_day)
tp @workingday_from.pluck(:payable_day)
tp @workingday_from.pluck(:id)
@ar = @workingday_from
@ar.year
@ar = tp @workingday_from
tp @workingday_from
@workingday_from
@w.payable_day
@w = @workingday_from
@workingday_from
@workingday_from.payable_day
@workingday_from
@workingday_from.employee_id
@from_day = @workingday_from.payable_day
tp @workingday_from = Workingday.where(employee_id: e.employee_id,month_name: @from_month,year: @from_year)
@workingday_from = Workingday.where(employee_id: e.employee_id,month_name: @from_month,year: @from_year)
@to_year = to_date.strftime('%Y')
@to_month = to_date.strftime('%B')
@from_year = from_date.strftime('%Y')
@from_month = from_date.strftime('%B')
to_date = e.to_date
from_date = e.from_date
exit
 @a
@a = a + 1
e.from_date.to_date..e.to_date.to_date
 a = 0
@a = a + 1
e.from_date.to_date..e.to_date.to_date
@a
exit
e.from_date..e.to_date
e.from_date.to_date..e.to_date.to_date
 @a.count
exit
@a.count
tp @a.count
@a.count
 @a = EmployeeAttendance.where(employee_id: e.employee_id,day: '2016-11-03')
e.from_date.to_date..e.to_date.to_date
 i in e.from_date.to_date..e.to_date.to_date
@a.count
exit
EmployeeAttendance.where(employee_id: e.employee_id,day: '2016-12-01').count
EmployeeAttendance.where(employee_id: e.employee_id).count
 e.from_date.to_date..e.to_date.to_date
exit
@employees = Employee.where.not(id: @emp_id)
@emp_id = WeekOffMaster.where(day: @day,from: '2016-12-01').pluck(:employee_id)
@week_off_master.from.to_date..@week_off_master.to.to_date
@emp_id = WeekOffMaster.where(day: @day,from: '2016-12-01',to: '2016-12-01').pluck(:employee_id)
@employees = Employee.where.not(id: @emp_id)
@employees = Employee.where(id: @emp_id)
@emp_id = WeekOffMaster.where.not(day: @day,from: '2016-12-01',to: '2016-12-01').pluck(:employee_id)
@week_off_master.from.to_date..@week_off_master.to.to_date
exit
@employees = Employee.where.not(id: @emp_id)
 @emp_id = WeekOffMaster.where(day: @day,from: i).pluck(:employee_id)
@emp_id
@employees = Employee.where.not(id: @emp_id)
exit
Employee.where.not(id: @a)
@a =  WeekOffMaster.where(day: @day,from: '2016-12-01').pluck(:employee_id)
 WeekOffMaster.where(day: @day,from: '2016-12-01').pluck(:employee_id)
tp WeekOffMaster.where(day: @day,from: '2016-12-01').pluck(:employee_id)
tp WeekOffMaster.where(day: @day,from: '2016-12-01')
WeekOffMaster.where(day: @day,from: '2016-12-01')
@week_off_master.from.to_date..@week_off_master.to.to_date
@week_off_master
exit
WeekOffMaster.exists?(from: i, employee_id: self.employee_id)
exit
 @week_off_master.is_presnt(i)
exit
work_data_structure
@employees.each { |e| work_data_structure << params[e] }
work_data_structure << params[e]
