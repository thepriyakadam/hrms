exit
b.each do |sb| sb.update(is_complete: true,training_plan: nil) end
 b=TraineeRequest.where(training_topic_master_id: @training_plan.training_topic_master_id,is_complete: nil,training_plan: nil)
a.each do |s| s.update(training_plan: true) end
a.each do |s|
   52:           end
   51:             s.update(training_plan: true)
a.each do |s|
a=TraineeRequest.where(training_topic_master_id: @training_plan.training_topic_master_id,is_complete: true,training_plan: nil)
exit
TraineeRequest.where(id: b).update_all(is_complete: true,training_plan: nil)
b=TraineeRequest.where(training_topic_master_id: @training_plan.training_topic_master_id,is_complete: nil,training_plan: nil).pluck(:id)
TraineeRequest.where(id: a).update_all(training_plan: true)
a=TraineeRequest.where(training_topic_master_id: @training_plan.training_topic_master_id,is_complete: true,training_plan: nil).pluck(:id)
exit
tr1.is_complete == nil && tr1.training_plan == nil
tr1.is_complete == true && tr1.training_plan == nil
exit
tr1.is_complete == true && tr1.training_plan == nil
@trainee_requests_1 =TraineeRequest.where(training_topic_master_id: @training_topic_master.id)
tr1.is_complete == true && tr1.training_plan == nil
tr1.is_complete == nil && tr1.training_plan == nil
exit
@trainee_requests =TraineeRequest.where(training_topic_master_id: @training_topic_master.id,is_complete: true,training_plan: nil)
tr1.is_complete == true && tr1.training_plan == nil
exit
tp @trainee_requests =TraineeRequest.where(training_topic_master_id: @training_topic_master.id,is_complete: true,training_plan: nil)
 @trainee_requests =TraineeRequest.where(training_topic_master_id: @training_topic_master.id,is_complete: true,training_plan: nil)
exit
tp @trainee_requests =TraineeRequest.where(training_topic_master_id: @training_topic_master.id,is_complete: nil,training_plan: nil)
@trainee_requests =TraineeRequest.where(training_topic_master_id: @training_topic_master.id,is_complete: nil,training_plan: nil)
c
tp @trainee_requests =TraineeRequest.where(training_topic_master_id: @training_topic_master.id,is_complete: :true)
@training_topic_master = TrainingTopicMaster.find(params[:training_topic_master_id])
exit
tp @trainee_requests =TraineeRequest.where(training_topic_master_id: @training_topic_master.id,is_complete: :true)
Employee.first
tp @trainee_requests =TraineeRequest.where(training_topic_master_id: @training_topic_master.id,is_complete: :true)
@trainee_requests =TraineeRequest.where(training_topic_master_id: @training_topic_master.id,is_complete: :true)
@training_topic_master = TrainingTopicMaster.find(params[:training_topic_master_id])
tp @trainee_requests =TraineeRequest.where(training_topic_master_id: @training_topic_master.id,is_complete: :true)
@trainee_requests =TraineeRequest.where(training_topic_master_id: @training_topic_master.id,is_complete: :true)
@training_topic_master = TrainingTopicMaster.find(params[:training_topic_master_id])
exit
@reporting_masters = ReportingMaster.where(employee_id: current_user.employee_id).pluck(:id)
c
@reporting_masters = ReportingMaster.find_by_employee_id(current_user.employee_id).pluck(:id)
@training_requests = TrainingRequest.where(reporting_master_id: @reporting_masters)
@reporting_masters = ReportingMaster.find_by_employee_id(current_user.employee_id)
exit
ReportingMaster.where.not(id: @reporting_masters).where(is_training: true).collect { |e| [e.try(:employee).try(:manual_employee_code).to_s + ' ' + e.try(:employee).try(:first_name).to_s + ' '+ e.try(:employee).try(:middle_name).to_s + ' ' + e.try(:employee).try(:last_name).to_s, e.id] }
tp ReportingMaster.where.not(id: @reporting_masters).where(is_training: true).collect { |e| [e.try(:employee).try(:manual_employee_code).to_s + ' ' + e.try(:employee).try(:first_name).to_s + ' '+ e.try(:employee).try(:middle_name).to_s + ' ' + e.try(:employee).try(:last_name).to_s, e.id] }
ReportingMaster.where.not(id: @reporting_masters).where(is_training: true).collect { |e| [e.try(:employee).try(:manual_employee_code).to_s + ' ' + e.try(:employee).try(:first_name).to_s + ' '+ e.try(:employee).try(:middle_name).to_s + ' ' + e.try(:employee).try(:last_name).to_s, e.id] }
tp @reporting_masters = ReportingMaster.find_by_employee_id(current_user.employee_id)
@reporting_masters = ReportingMaster.find_by_employee_id(current_user.employee_id)
exit
@due_employee_detail = DueEmployeeDetail.find(params[:due_employee_detail_id])
params[:due_employee_detail_id]
exit
params[:due_employee_detail_id]
@due_employee_detail = DueEmployeeDetail.find(params[:due_employee_detail_id])
exit
emp.any? {|i| due_emp_details.uniq.include?(i) } == false
emp.any? {|i| due_emp_details.uniq.include?(i) }
emp.any? {|i| due_emp_details.uniq.include?(i)
exit
emp.any? {|i| due_emp_details.uniq.include?(i) }
c
exit
due_emp_details.uniq.in?(emp.to_a)
exit
due_emp_details.uniq.in?(emp.map {|i| i.to_i})
due_emp_details.uniq.in?(emp)
exit
a.include? d
d=due_emp_details
a.include? d
d=due_emp_details.uniq
a=emp
c
a
a.include? c
c=due_emp_details.uniq
a=emp
exit
emp.include? due_emp_details.uniq
c
c\
emp.include? due_emp_details.uniq
emp.include? due_emp_details.uniq.include
emp.include? due_emp_details.uniq.include?
a=emp
emp
due_emp_details.uniq
due_emp_details.uniq.include? emp
exit
due_emp_details.uniq.present?(emp)
due_emp_details.uniq.present?('emp')
emp
due_emp_details.uniq
due_emp_details.uniq.include?('emp')
due_emp_details.uniq.include?(emp)
continue
due_emp_details.include?(emp)
due_emp_details.uniq
emp
due_emp_details.uniq
due_emp_details.uniq.include?(emp)
exit
a.include? c
c=emp
a=[4605, 5036]
b
a
a.include? b
b=emp
a=[4605, 5036]
emp
due_emp_details.uniq
due_emp_details.uniq.include? emp
due_emp_details.uniq.include?
due_emp_details.uniq.include? emp
exit
c
a==b
b=[4605, 5036]
a=[4605, 4605, 4605, 4605, 5036, 5036, 5036, 5036]
emp
due_emp_details.unique
due_emp_details.distinct
due_emp_details
due_emp_details == emp
exit
c
ded.employee_id == e.id
due_emp_details = DueEmployeeDetail.where(employee_id: e.id)
emp=Employee.all
c
exit
continue
exit
c
exit
c
due_details = DueEmployeeDetail.where(employee_id: a)
due_details = DueEmployeeDetail.where(employee_id: a).pluck(:employee_id).map {|i| i.to_i}
a=Employee.ids
a
c
a=Employee.ids
a
due_details = DueEmployeeDetail.where(employee_id: a)
due_details = DueEmployeeDetail.where(employee_id: a.id)
due_details = DueEmployeeDetail.where(employee_id: a.id).pluck(:employee_id).map {|i| i.to_i}
due_details = DueEmployeeDetail.where(employee_id: a).pluck(:employee_id).map {|i| i.to_i}
        <%debugger%>
c
due_details = DueEmployeeDetail.where(employee_id: a.id).pluck(:employee_id).map {|i| i.to_i}
due_details = DueEmployeeDetail.where(employee_id: a).pluck(:employee_id).map {|i| i.to_i}
c
due_details = DueEmployeeDetail.where(employee_id: employee.id).pluck(:employee_id).map {|i| i.to_i}
due_details = DueEmployeeDetail.where(employee_id: employee).pluck(:employee_id).map {|i| i.to_i}
due_details = DueEmployeeDetail.where(employee_id: employee.id).pluck(:employee_id).map {|i| i.to_i}
c
employee
DueEmployeeDetail.where(employee_id: employee.id).pluck(:employee_id).map {|i| i.to_i}
due_details = DueEmployeeDetail.where(employee_id: employee.id).pluck(:employee_id).map {|i| i.to_i} == employee.id
c
@employee = Employee.find(params[:emp_id])
c
exit
@employee = Employee.find(params[:format])
exit
tp @due_employee_details = DueEmployeeDetail.where(reporting_master_id: @reporting_masters,is_confirmed: true)
@due_employee_details = DueEmployeeDetail.where(reporting_master_id: @reporting_masters,is_confirmed: true)
@reporting_masters = ReportingMaster.find_by_employee_id(current_user.employee_id)
exit
exit\
c
have_template(employee)
have_template
have_template(employee)
c
@joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
@certificate = params[:salary][:certificate_master_id]
@employee = Employee.find(params[:salary][:employee_id])
