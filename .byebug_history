continue
params
continue
employee
n
continue
params
params["employee_id"]
params[employee_id]
params
params[:employee_id]
params
employee_id
Employee.where(id: employee_id)
employee
n
continue
n
employee.last.joining_detail.employee_designation.namen
employee.last.joining_detail.employee_designation.name
employee.last.joining_detail.employee_designation
employee.last.joining_detail.name
employee.last.joining_detail
employee.last.department.name
employee.last.department_id
 employee
employee
employee.last
employee.last.department_id
employee.last.department
employee.last.department.name
employee.last.sub_department
employee.last.cost_center
employee.last.joining_detail
employee.last.joining_detail.name
Employee.where(id: employee_id).count
Employee.where(id: employee_id)
n
params
continue
 employee_attendances.last.holiday.name
 employee_attendances.last.holiday_id
 employee_attendances.last.holiday_id.name
 employee_attendances.last
n
continue
Member.employee_id.class
Member.find(employee_id).class
Member.find(employee_id)
Member.find(employee_id).class == Group
employee_id
employee_id.class
employee_id.class == Group
employee_leav_requestcurrent_user.class == Group
 current_user.employee_id
employee_leav_request
n
nn
n
nn
n
continue
n
params
continue
EmployeePlan.where(id: employee_id)
current_user
EmployeePlan.where(id: current_user.employee_id)
params
continue
@employee_plans = EmployeePlan.find(current_user)
current_user
params
continue
n
continue
n
continue
n
@employee_leav_request.employee.manager_2_id.nil?
@employee_leav_request.current_status
@employee_leav_request.current_status = "Pending"
n
params
continue
leave_approval.count
continue
n
continue
n
continue
n
continue
leave_list.last.leave_status_records
leave_list.last.leave_status_records.
leave_list.last.leave_status_records.last
leave_list.last.leave_status_records
leave_list.last
leave_list
continue
leave_approval.last.current_status
leave_approval.last.status.name
leave_approval.last
leave_approval
continue
@user
n
password
email
n
continue
Member.find_by_email(email.downcase)
n
continue
EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}").count == 0
n
continue
EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}").count == 0
EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}").count
EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}")
EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}") == 0
employee = EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}") == 0
employee = EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}") == o
employee = EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}")
EmployeeLeavRequest.where(is_pending: true, is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}")
EmployeeLeavRequest.where(is_first_approved: false).count
params
employee = EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}")
continue
@first_approved_employee_leav_requests = EmployeeLeavRequest.where(is_first_approved: true, is_second_approved: false, is_second_rejected: false, is_cancelled: false, second_reporter_id: current_user.employee_id).count
EmployeeLeavRequest.where(is_first_approved: true, is_second_approved: false, is_second_rejected: false, is_cancelled: false, second_reporter_id: current_user.employee.count
EmployeeLeavRequest.where(is_first_approved: true, is_second_approved: false, is_second_rejected: false, is_cancelled: false, second_reporter_id: current_user.employee
EmployeeLeavRequest.where(is_first_approved: true, is_second_approved: false, is_second_rejected: false, is_cancelled: false, second_reporter_id: current_user.employee_id)
EmployeeLeavRequest.where(is_pending: true, is_first_approved: false, is_first_rejected: false, is_cancelled: false, first_reporter_id: current_user.employee_id)
n
current_user.class == Group
continue
EmployeeLeavRequest.where(is_pending: true, is_first_approved: false, is_first_rejected: false, is_cancelled: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}").count
EmployeeLeavRequest.where(is_pending: true, is_first_approved: false, is_first_rejected: false, is_cancelled: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}")
n
continue
leave_approval =  EmployeeLeavRequest.where(is_pending: true, is_first_approved: false, is_first_rejected: false, is_cancelled: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}")
params
continue
EmployeeLeavBalance.where(employee_id: @leave_user)
n
params
continue
@employee_plan.manager_id
@employee_plan.manager_id.try(:manual_employee_code)
@employee_plan.manager_id.try(:manual_employee_code) - full_name(@employee_plan.try(:managers))
@employee_plan.manager_id.try(:manual_employee_code) - full_name(@employee_plan.try(:manager))
@employee_plan
@employee_plan.manager_id.try(:manual_employee_code)
@employee_plan.manager.try(:manual_employee_code)
@employee_plan.manager.try(:manual_employee_code) - full_name(@employee_plan.try(:manager))
@employee_plan.manager.try(:manual_employee_code) %> - <%= full_name(@employee_plan.try(:manager))
<%= @employee_plan.manager.try(:manual_employee_code) %> - <%= full_name(@employee_plan.try(:manager))
<%= @employee.manager.try(:manual_employee_code) %> - <%= full_name(@employee.try(:manager))
continue
@employee_plan.manager.try(:name)
@employee_plan.manager.try(:first_name)
@employee_plan.manager.employee.try(:first_name)
@employee_plan.employee.employee.try(:first_name)
@employee_plan.employee.@employee_plan.manager_id
continue
@employee_plan.employee.
continue
@employee_plan.employee.try(:first_name)
current_user.employee_id
@employee_plan
continue
Member.find(member_id).login_count
member_id
count
n
count
n
count
member_id
n
params
continue
n
count
n
continue
n
user_signed_in? == true
user_signed_in? == false
login_count == 0
login_count
n
count
n
member_id
mrmber_id
n
continue
n
continue
count
continue
member_signed_in?
authenticate_member!
user_signed_in?
user_session
continue
c
session.user
session.current_user
session.id
continue
@session
@session_id
session_id
gets session_id
gets session id
continue
urrent_user.id
current_user
current.user
user_signed_in?
continue
user_signed_in?
resource
user_signed_in? 
user_signed_in?
user_signed_in
user_signed_in? 
continue
user_signed_in? != false
user_signed_in? != true
user_signed_in? == false
n
user_signed_in?
user_signed_in? == false
user_signed_in?
 @suit.user == current_user
if @suit.user == current_user
session[:user_id]
session[:current_user]
session
session[:user_id]
continue
current_user.id
continue
n
nn
n
params
continue
params
continue
params
continue
