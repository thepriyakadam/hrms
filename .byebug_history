exit
 exit
exit
sr.second
sr.all
sr
sr.present_day = wd.present_day.to_i
sr.present_day = wd.present_day
   112:     sr.weekoff = wd.week_off_day
   111:     sr.holiday = wd.holiday_in_month.to_i
   110:     sr.absent_day = wd.absent_day
 sr.present_day = wd.present_day
exit
sr.code = e.manual_employee_code
exit
@reports + 1
@reports.next
@reports[00000]
@reports[00000ool]
@reports[0]
@reports[2]
@reports[1]
@reports << sr
exit
e.code
sr.try(:each) do |e|
@reports << sr
sr = SalaryReport.collect_data(e,j,sl1)
exit
sr = SalaryReport.collect_data(e,j,sl1)[2]
sr = SalaryReport.collect_data(e,j,sl1).second
sr = SalaryReport.collect_data(e,j,sl1)
sr.code.to_i
sr.code
@reports << sr
exit
@reports << sr
sr = SalaryReport.collect_data(e,j,sl1)
 a="10008" ==  sr1.code.to_s
a="10008" ==  sr1.code.to_s
sr1 = SalaryReport.collect_data(e,j,sl1)
exit
sr.code
@reports << sr
sr = SalaryReport.collect_data(e,j,sl1)
@reports << sr
exit
@reports << sr
exit
@reports << sr
params[:report_ids]
params[:report_ids] ==  sr.code.to_s
@reports.code
@reports = SalaryReport.collect_data(e,j,sl1)
sr.code
sr = SalaryReport.collect_data(e,j,sl1)
exit
"'#{['12','34','35','231'].join("','")}'"
['12','34','35','231'].join(",")
['12','34','35','231'].join(""")
['12','34','35','231'].join(",")
rep=params[:report_ids]
rep=params[:report_ids].to_i
rep=params[:report_ids]
["10", "20", "50","99"].map(&:inspect).join(',')
["10", "20", "50","99"].map(&:inspect).join(', ')
rep=params[:report_ids]
exit
sr.code
rep=params[:report_ids]
sr.code.to_a
sr.code
sr = SalaryReport.collect_data(e,j,sl1)
exit
@category = params[:category]
@bank = Bank.find(params[:bank_id])
exit
sr
@reports << sr
tp sr = SalaryReport.collect_data(e,j,sl1)
exit
@bank = Bank.find(params[:bank_id])
exit
rep=params[:report_ids]
exit
sr.where(code: "10008")
sr.where(code: 10008)
sr
@reports << sr
tp sr = SalaryReport.collect_data(e,j,sl1)
sr = SalaryReport.collect_data(e,j,sl1)
exit
rep=params[:report_ids].to_i
rep=params[:report_ids].to_s
rep=params[:report_ids]
exit
rep=params[:report_ids]
exit
rep=params[:report_ids]
rep=params[:report_ids].to_i
rep=params[:report_ids]
exit
rep=params[:report_ids]
    exit
      end
        @reports << sr
        sr = SalaryReport.collect_data(e,j,sl1)
      else
      if j.nil? or e.nil? or sl1.nil?
      sl1 = Salaryslip.where('employee_id = ? and month = ? and year = ?', e.id, @month, @year.to_s).take
      #wd1 = Workingday.where('employee_id = ? and month_name = ? and year = ?', e.id, @month, @year.to_s).take
      j = JoiningDetail.find_by_employee_id(e.id)
@employees.try(:each) do |e|
sr = SalaryReport.collect_data(e,j,sl1)
@reports = []
final_emp_array = emp_array & emp_user_array & joining_array
final_emp_array = emp_array & emp_user_array
emp_user_array = Employee.collect_rolewise(current_user)
emp_array = EmployeeBankDetail.where(bank_id: @bank.id).pluck(:employee_id)
joining_array = JoiningDetail.where(employee_category_id: @category).pluck(:employee_id)
@month, @year = params[:month], params[:year]
@category = params[:category]
@bank = Bank.find(params[:bank_id])
rep=params[:report_ids]
exit
rep=params[:report_ids]
exit
rep=params[:report_ids]
exit
rep=params[:report_ids]
