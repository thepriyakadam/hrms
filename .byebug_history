exit
@salary_template = SalaryTemplate.find(params[:format])
@salary_components = SalaryComponent.all
exit
            end
                end
                  end
                    deducted_calculated_amount = 0
                    deducted_actual_amount = 0
                  else
                    end
                      SalaryslipComponent.create(salaryslip_id: @salaryslip.try(:id), actual_amount: @da.minimum_wages, calculated_amount: @da.minimum_wages, is_deducted: true, other_component_name: 'DA',salary_component_id: @salary_component.try(:id))
                      @salary_component = SalaryComponent.find_by(name: "DA")
                    if @da.minimum_wages.to_f > basic_calculated_amount.to_f 
                  if @da.is_da  && @employee.joining_detail.is_da
                  # if @retention.have_retention == true  && @employee.joining_detail.have_retention
                  unless @da.nil?
              if @da.is_da == true
            end@da = DaMaster.first
                end
                  end
                    deducted_calculated_amount = 0
                    deducted_actual_amount = 0
                  else
                    end
                      SalaryslipComponent.create(salaryslip_id: @salaryslip.try(:id), actual_amount: @da.minimum_wages, calculated_amount: @da.minimum_wages, is_deducted: true, other_component_name: 'DA',salary_component_id: @salary_component.try(:id))
                      @salary_component = SalaryComponent.find_by(name: "DA")
                    if @da.minimum_wages.to_f > basic_calculated_amount.to_f 
                  if @da.is_da  && @employee.joining_detail.is_da
                  # if @retention.have_retention == true  && @employee.joining_detail.have_retention
                  unless @da.nil?
              if @da.is_da == true
@da = DaMaster.first
            end
              sc.is_deducted = false
              sc.calculated_amount = addable_calculated_amount
              sc.actual_amount = addable_actual_amount
              sc.salary_component_id = item.salary_component_id
@addable_salaryslip_item = SalaryslipComponent.new do |sc|
basic_calculated_amount = addable_calculated_amount.to_i
basic_calculated_amount = addable_calculated_amount.to_i\
basic_calculated_amount = addable_calculated_amount
exit
@da.minimum_wages.to_f > basic_calculated_amount.to_f
@da.is_da == true
if @da.is_da == true
@da = DaMaster.first
basic_calculated_amount = addable_calculated_amount.to_f
basic_calculated_amount = addable_calculated_amount
exit
basic_calculated_amount = addable_calculated_amount.to_f
basic_calculated_amount = addable_calculated_amount
exit
basic_calculated_amount = addable_calculated_amount
