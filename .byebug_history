continue
tp punch.where(EmpCode: 15137)
punch.where(EmpCode: 15137)
punch.where(EmpCode: 15137).count
punch.where(EmpCode: 15137)
continue
params
continue
params
continue
28-12-2017
from_date
EmployeePlan.where("from_date >= ?", from_date)
from_date.present? && !to_date.present?
continue
latitude == last_lat && longitude == last_lon
n
continue
n
latitude == last_lat && longitude == last_lon
n
continue
employee_plan
n
continue
EmployeePlan.where(employee_id: employee_id).where("? BETWEEN from_date AND from_date", date).count
EmployeePlan.where(employee_id: employee_id).where("? BETWEEN from_date AND from_date", date)
manager_id.nil?
manager_id.empty?
params
continue
last_lat
latitude
latitude == last_lat && longitude == last_lon
n
continue
emp_last_history
emp_last_history.
latitude = params[:latitude].to_f
last_lon
longitude
longitude == last_lon
latitude == last_lat 
latitude == last_lat && longitude == last_lon
last_lon
n
longitude
last_lon
last_lat
n
emp_count
continue
latitude
date
EmployeeLocationHistory.where(employee_id: emp_id, date: date)
emp_last_history
continue
 @plan_reason = PlanReasonMaster.find(reason_id)
n
continue
salray_slips.employee
salray_slips = Salaryslip.where(id: slip_id)
salray_slips = Salaryslip.where('id:= ?', slip_id)
salray_slips.count
salray_slips
continue
emp
DailyAttendance.where(employee_code: emp_code, date: date)
n
continue
params[:status]
params[:manager_id].empty?
params[:manager_id].nil?
params[:manager_id]
params
continue
in_time
time
date
employee_id
date_att
continue
c
 @current_request = OnDutyRequest.find(params[:format])
c
 @status == false
 @status == nil
 @status == false
EmployeeLeavBalance.where(is_active: false)
 @employee_leav_balances
 @employee_leav_balances = EmployeeLeavBalance.where(is_active: false)
@status == false
@status == nil
@status == false
@status == true
 if @status == true
  @status = params[:employee][:is_active]
c
 @employee_leav_balances = EmployeeLeavBalance.where(is_active: false)
@status == false
 @status == true
c
 @employee_leav_balances = EmployeeLeavBalance.where(is_active: false)
 @employee_leav_balances = EmployeeLeavBalance.where(is_active: true)
 @status == false
elsif @status == false
@status = params[:employee][:is_active]
c
@employee_leav_balances
@employee_leav_balances = EmployeeLeavBalance.where(is_active: @status)
@status == true
@status = params[:employee][:is_active]
c
 @status = params[:employee][:is_active]
 @status = params[:is_active]
c
n
manual_employee_code == 0
if manual_employee_code == 0
n
manual_employee_code == 0
 manual_employee_code = spreadsheet.cell(i,'B').to_i
 manual_employee_code = spreadsheet.cell(i,'B')
manual_employee_code == "0"
 if manual_employee_code == "0"
 manual_employee_code = spreadsheet.cell(i,'B').to_i
c
 if manual_employee_code == "0"
c
 manual_employee_code = spreadsheet.cell(i,'B')
 manual_employee_code = spreadsheet.cell(i,'B').to_i
continue
@on_duty_request.is_available?
payroll_period.to
payroll_period.from
start_date.to_date >= payroll_period.from.to_date && end_date.to_date <= payroll_period.to.to_date
payroll_period.nil?
payroll_period = PayrollPeriod.where(status: true).take 
payroll_period
paramsparams[:common][:last_half]
params
params[:flag]
continue
n
nn
n
continue
to_plan.present?
to_plan
to_plan.present?
from_plan.present?
n
continue
n
to_plan
n
from_plan
n
continue
employee_plan.where("? BETWEEN from_time AND to_time", from_time)
from_time
continue
employee_plan.where("? BETWEEN from_time AND to_time", from_time)
employee_plan
continue
employee_plan = @employee_plan.where(from_date: from_date_now.to_date, to_date: to_date_now.to_date)
@employee_plan = EmployeePlan.where(employee_id: current_user.employee_id)
@employee_plan = EmployeePlan.where(employee_id: current_user.employee_id).count
employee_plan = @employee_plan.where(from_date: from_date_now.to_date, to_date: to_date_now.to_date)
employee_plan = @employee_plan.where(from_date: from_date.to_date, to_date: to_date.to_date)
@employee_plan = EmployeePlan.where(employee_id: current_user.employee_id).count
@employee_plan = EmployeePlan.where(employee_id: current_user.employee_id)
from_date_now
to_time_now
from_time_now
continue
employee_plan.where("? BETWEEN 'from_time.to_time + 24*60*60' AND 'to_time.to_time + 24*60*60'", from_time.to_time + 24*60*60)
n
@employee_plan.where(from_date: from_date.to_date, to_date: to_date.to_date)
continue
@employee_plan.where(from_date: from_date.to_date, to_date: to_date.to_date)
@employee_plan
@employee_plan.where(from_date: from_date.to_date, to_date: to_date.to_date)
to_date
from_date
continue
from_time.to_time.utc.strftime("%H:%M")
from_time.utc.strftime("%H:%M")
from_time.to_time
from_time.to-time
from_time
employee_plan.where(from_time:'2000-01-01 16:00:00')
employee_plan.where(from_time: 2000-01-01 16:00:00)
employee_plan.where(from_time: from_time.to_time + 24*60*60)
employee_plan.where(from_time: from_time)
employee_plan.where("? BETWEEN 'from_time.to_time' AND 'to_time.to_time'", from_time.to_time)
employee_plan.where("? BETWEEN 'from_time.to_time + 24*60*60' AND 'to_time.to_time + 24*60*60'", from_time.to_time + 24*60*60)
employee_plan.last.from_time.to_time + 24*60*60
employee_plan.last.from_time
employee_plan.last.from_date.time
employee_plan.last.from_date
employee_plan.where("? BETWEEN "2000-01-01 16:00:00" AND "2000-01-01 16:00:00" ", from_time)
employee_plan.where("? BETWEEN 2000-01-01 16:00:00 AND 2000-01-01 16:00:00 ", from_time)
employee_plan.where("? BETWEEN from_time AND to_time", from_time)
employee_plan
n
@employee_plan.where(from_date: from_date.to_date, to_date: to_date.to_date)
continue
employee_plan.where("? BETWEEN from_time AND to_time", from_time)
from_time = from_time.to_time
from_time.to_time
from_time
n
from_time
continue
from_time
from_time = employee_plan.where("? BETWEEN from_time AND to_time", from_time.to_time)
from_time = employee_plan.where("? BETWEEN from_time AND to_time", from_time)
n
continue
from_time = employee_plan.where("? BETWEEN from_time AND to_time", from_time)
employee_plan.where("? BETWEEN from_time.to_time AND to_time.to_time, to_time.to_time)
employee_plan.where("? BETWEEN from_time.to_time AND to_time.to_timE, to_time.to_time)
employee_plan.where("? BETWEEN from_time.to_time AND to_time.to_time", to_time.to_time)
employee_plan.where("? BETWEEN from_time AND to_time", to_time.to_time)
from_time = employee_plan.where((from_time: from_time.to_time)..(to_time: to_time.to_time))
from_time = employee_plan.where(from_time: from_time.to_time..to_time: to_time.to_time)
from_time = employee_plan.where(from_time..to_time)
from_time = employee_plan.where(
from_time = employee_plan.where(from_time..to_time
employee_plan.where("? BETWEEN #{from_time} AND #{to_time}", to_time)
employee_plan.where("? BETWEEN from_time AND to_time", to_time)
employee_plan.where("? BETWEEN from_time AND to_time", from_time.to_time)
employee_plan.where("? BETWEEN from_time AND to_time", from_time)
n
continue
to_time
from_time
employee_plan.where("? BETWEEN from_time AND to_time", from_time)
 nplan.where("? BETWEEN from_time AND to_time", from_time)
n
employee_plan
employee_plann
employee_plan
n
continue
employee_plan = @employee_plan.where(from_date: from_date.to_date, to_date: to_date.to_date).count
continue
params[:employee_plan][:from_date].to_date.strftime("%d-%m-%Y")
params[:employee_plan][:from_date].to_date.strftime("%m-%d-%Y")
params[:employee_plan][:from_date].to_date.strftime("%m/%d/%Y")
params[:employee_plan][:from_date].to_date
params[:employee_plan][:from_date].strftime("%m/%d/%Y")
params[:employee_plan][:from_date]
continue
n
