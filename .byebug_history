exit
c
EmployeeAttendance.create(employee_id: self.employee_id, present: "P/OD", count: 0.5,department_id: self.employee.try(:department_id),on_duty_request_id: self.id)
self.first_half == true
self.first_half == true && self.last_half == true
tp @emp_attendance.update(employee_id: self.employee_id, day: i, present: 'OD', count: 1,department_id: self.employee.try(:department_id),on_duty_request_id: self.id)
@emp_attendance.update(employee_id: self.employee_id, day: i, present: 'OD', count: 1,department_id: self.employee.try(:department_id),on_duty_request_id: self.id)
 self.start_date.to_date..self.end_date.to_date
i in self.start_date.to_date..self.end_date.to_date
i
self.first_half == true
self.last_half == true
 self.first_half == true && self.last_half == true
 self.last_half
self.first_half
c
company
department.to_i
company_location.to_i
company.to_i
Employee.where(company_id: company.to_i,company_location_id: company_location.to_i,department_id: department.to_i,status: 'Active')
exit
@department
 @company_location
 @company
c
@department
@company_location
@company
c
@department
@department == ""
@company_location
@company_location == ""
@company == ""
@company
c
employee_ids
@employee_ids = params[:employee_ids]
c
@weightage_limit = goal_id_sum >= @goal_perspective.from && goal_id_sum <= @goal_perspective.to
@goal_perspective.goal_weightage
goal_id_sum = @goal_rating.goal_id_sum(@goal_by_id)
