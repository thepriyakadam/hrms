exit
tp employees=Employee.where(id: @employee_resignation.employee_id)
 employees=Employee.where(id: @employee_resignation.employee_id)
e.manager_id
c
exit
lmm.to.to_i
lmm.from.to_i
ea1.late_mark.to_f
ea1.late_mark.between?(lmm.from.to_i, lmm.to.to_i)
ea1.late_mark.to_f
ea1.late_mark
exit
0.75/60
ea1.working_hrs.to_time
late_working_hrs = (ea1.working_hrs.to_time - lmm.late_mark.to_time) / 1.hours
c
e.out.strftime('%H:%M:%S') < ctm.out_time.strftime('%H:%M:%S')
exit
EmployeeAttendance.where(id: eatt).update_all(working_hrs: final_time_diff_in_hrs)
final_time_diff_in_hrs
time_diff
exit
final_time_diff_in_hrs=time_diff.to_time.strftime("%H").to_i + time_diff.to_time.strftime("%M").to_f/60
final_time_diff_in_hrs=time_diff.to_time.strftime("%H").to_i + time_diff.strftime("%M").to_f/60
final_time_diff_in_hrs=time_diff.strftime("%H").to_i + time_diff.strftime("%M").to_f/60
time_diff=Time.at((eatt.out_time-eatt.in_time).round).utc.strftime "%H:%M"
c
c=b
b=("00:30".to_time)
b=("00:30".to_time) / 1.hours
d=(a-b) / 1.hours
d=(a-b)
b="00:30".to_time
a="00:15".to_time
a="00:15".to_f
b=a/1.hours
a="00:15".to_time
a="00:15"
00:15
late_hr = (working_hr-latemark) / 1.hours
late_hr = (working_hr-latemark)
latemark="8:00".to_time
working_hr=time_diff.to_time
time_diff.to_time
time_diff=Time.at((eatt.out_time-eatt.in_time).round).utc.strftime "%H:%M".to_time
time_diff=Time.at((eatt.out_time-eatt.in_time).round).utc.strftime "%H:%M"
total_time_diff = (time_diff.to_time - ctm.working_hrs.to_time) / 1.hours
EmployeeAttendance.where(id: eatt).update_all(working_hrs: time_diff)
exit
emp_attend = EmployeeAttendance.where(employee_id: e.employee_id,month_name: month_name,day: e.day,difference_hrs: nil)
month_name = e.day.strftime("%B")
c
EmployeeAttendance.where(id: ea1).update_all(working_hrs: late_working_hrs,difference_hrs: late_hrs.abs)
late_hrs = (ea1.working_hrs.to_time - ctm.working_hrs.to_time) / 1.hours
tp @emp_attend_1 = EmployeeAttendance.where(employee_id: e.employee_id,month_name: month_name,day: e.day,difference_hrs: nil,overtime_hrs: nil).where.not(late_mark: nil,working_hrs: nil)
@emp_attend_1 = EmployeeAttendance.where(employee_id: e.employee_id,month_name: month_name,day: e.day,difference_hrs: nil,overtime_hrs: nil).where.not(late_mark: nil,working_hrs: nil)
late_hrs = (ea1.working_hrs.to_time - ctm.working_hrs.to_time) / 1.hours
e.employee.joining_detail.ot_option == false
e.employee.joining_detail.ot_option == true
e.employee.joining_detail.ot_option == true || e.employee.joining_detail.ot_option == false
overtime_hrs
c
Calculations.............................-2.0
exit
EXIT
EmployeeAttendance.where(id: ea1).update_all(working_hrs: late_working_hrs,difference_hrs: late_hrs.abs)
late_hrs = (ea1.working_hrs.to_time - ctm.working_hrs.to_time) / 1.hour
EmployeeAttendance.where(id: ea1).update_all(working_hrs: late_working_hrs,difference_hrs: late_hrs.abs)
mployeeAttendance.where(id: ea1).update_all(working_hrs: late_working_hrs,difference_hrs: late_hrs.abs)
(ea1.working_hrs.to_time - ctm.working_hrs.to_time) / 1.hours
(ctm.working_hrs.to_time - ea1.working_hrs.to_time) / 1.hours
ctm.working_hrs.to_time
ea1.working_hrs.to_time
PM
ot_option
c
total_time_diff = (time_diff.to_time - ctm.working_hrs.to_time) / 1.hours
time_diff=Time.at((eatt.out_time-eatt.in_time).round).utc.strftime "%H:%M"
exit
eatt.in_time
eatt.out_time
time_diff=Time.at((eatt.out_time-eatt.in_time).round).utc.strftime "%H:%M"
tp emp_attend = EmployeeAttendance.where(employee_id: e.employee_id,month_name: month_name,day: e.day)
tp emp_attend = EmployeeAttendance.where(employee_id: e.employee_id,month_name: month_name)
emp_attend = EmployeeAttendance.where(employee_id: e.employee_id,month_name: month_name)
ea1.working_hrs.to_time
ea1.working_hrs.to_time 
total_time_diff = (late_working_hrs_1.abs - ctm.working_hrs.to_time) / 1.hours
  CACHE (0.0ms)  SELECT  "employees".* FROM "employees" WHERE "employees"."id" = ? LIMIT
 = ? LIMIT 1  [["id", 1]]
exit
@company_time_master.id
company_time_master_params
c
reload!
@c1
EmployeeAttendance.where(id: @c1.id).update_all(out_time: ctm.out_time)
exit
ctm.working_hrs.to_f
ctm.working_hrs
time_diff.to_time
(time_diff.to_time - ctm.working_hrs)
ctm.working_hrs.to_f
ctm.working_hrs
tm.working_hrs
time_diff.to_time
time_diff.to_tim
exit
Time.at((@c1.in_time-@c1.out_time).round).utc.strftime "%H"
Time.at((@c1.in_time-@c1.out_time).round).utc.strftime "%H".to_i
Time.at((@c1.in_time-@c1.out_time).round).utc.strftime "%H"
Time.at((@c1.in_time-@c1.out_time).round).utc.strftime "%H:%M"
Time.at((@c1.in_time-@c1.out_time).round.abs).utc.strftime "%H:%M"
Time.at((@c1.out_time-@c1.in_time).round.abs).utc.strftime "%H:%M"
@c1=EmployeeAttendance.create(employee_id: e.employee_id,day: e.day.to_date,in_time: ctm.in_time,out_time: ctm.out_time,machine_attendances_id: e.id,company_time_master_id: ctm.id,present: e.present,month_name: month_name)
exit
Time.at((@c1.out_time-@c1.in_time).round.abs).utc.strftime "%H:%M"
Time.at((@c1.out-@c1.in).round.abs).utc.strftime "%H:%M"
@c1=EmployeeAttendance.create(employee_id: e.employee_id,day: e.day.to_date,in_time: ctm.in_time,out_time: ctm.out_time,machine_attendances_id: e.id,company_time_master_id: ctm.id,present: e.present,month_name: month_name)
exit
@c1.out_time
@c1.in_time
@c1.out_time.strftime("%I:%M %p")
@c1.in_time.strftime("%I:%M %p")
time_diff=TimeDifference.between(@c1.in_time.strftime("%I:%M %p"), @c1.out_time.strftime("%I:%M %p")).in_hours.to_f
time_diff=TimeDifference.between(@c1.in_time.strftime('%H:%M:%S'), @c1.out_time.strftime('%H:%M:%S')).in_hours.to_f
@c1=EmployeeAttendance.create(employee_id: e.employee_id,day: e.day.to_date,in_time: ctm.in_time,out_time: ctm.out_time,machine_attendances_id: e.id,company_time_master_id: ctm.id,present: e.present,month_name: month_name)
time_diff=TimeDifference.between(@c1.in_time.strftime('%H:%M:%S'), @c1.out_time.strftime('%H:%M:%S')).in_hours.to_f
@c1=EmployeeAttendance.create(employee_id: e.employee_id,day: e.day.to_date,in_time: ctm.in_time,out_time: ctm.out_time,machine_attendances_id: e.id,company_time_master_id: ctm.id,present: e.present,month_name: month_name)
month_name = e.day.strftime("%B")
exit
@c1.out_time.strftime('%H:%M:%S')
@c1.in_time.strftime('%H:%M:%S')
time_diff=TimeDifference.between(@c1.in_time.strftime('%H:%M:%S'), @c1.out_time.strftime('%H:%M:%S')).in_hours.to_f
@c1=EmployeeAttendance.create(employee_id: e.employee_id,day: e.day.to_date,in_time: ctm.in_time,out_time: ctm.out_time,machine_attendances_id: e.id,company_time_master_id: ctm.id,present: e.present,month_name: month_name)
month_name = e.day.strftime("%B")
exit
lmm.late_mark.to_f - ea1.working_hrs.to_f
ea1.working_hrs.to_f
lmm.late_mark.to_f
c
@emp_attend_1 = EmployeeAttendance.where(employee_id: e.employee_id,month_name: month_name).where.not(late_mark: nil)
exit
ea1.working_hrs.to_f
lmm.late_mark.to_f
ea1.late_mark.to_f
ea1.late_mark
tp @emp_attend_1 = EmployeeAttendance.where(employee_id: e.employee_id,month_name: month_name).where.not(late_mark: nil)
@emp_attend_1 = EmployeeAttendance.where(employee_id: e.employee_id,month_name: month_name).where.not(late_mark: nil)
exit
EmployeeAttendance.where(id: @c1.id).update_all(overtime_hrs: total_time_diff)
exit
@c1=EmployeeAttendance.create(employee_id: e.employee_id,day: e.day.to_date,in_time: ctm.in_time,out_time: ctm.out_time,machine_attendances_id: e.id,company_time_master_id: ctm.id,present: e.present,month_name: month_name)
month_name = e.day.strftime("%B")
e.in.strftime('%H:%M:%S').between?(ctm.in_min_time.strftime('%H:%M:%S'), ctm.in_max_time.strftime('%H:%M:%S')) && e.out.strftime('%H:%M:%S').between?(ctm.out_min_time.strftime('%H:%M:%S'), ctm.out_max_time.strftime('%H:%M:%S'))
3270 | 57          | 03-01-2017 | P       | 2017-02... | 2017-02... |               | 2017-... | 2017-... | false      |       |                          | 3796                   | 2                      | 8.5         |           |                | 0.199999999999999 | January    |          
 rails s
exit
e.employee.joining_detail.ot_option == true
e.employee.joining_detail.ot_option
e.present.nil?
 e.in.nil?
e.in.nil? || e.out.nil? || e.present.nil? && e.employee.joining_detail.ot_option == true
exit
month_name = e.day.strftime("%B")
c
C
total_time_diff = time_diff - ctm.working_hrs.to_f
time_diff=TimeDifference.between(@c3.in_time.strftime('%H:%M:%S'), @c3.out_time.strftime('%H:%M:%S')).in_hours.to_f
@c3.present == "A"
\
exit
e.in.nil? || e.out.nil? || e.present.nil?
exit
e.in.nil? == false
e.in
e.in.nil?
e.present.nil? == false
e.present
e.in.nil? && e.out.nil? && e.present.nil? == false
c
exit
e.present == nil
e.present
e.present == nil
e.present != nil
e.present
e.present.nil?
e.in.nil? && e.present.nil? == false
e.in.nil? && e.out.nil? && e.present.nil? == false
exit
e.out == nil
e.out
e.in
e.present.nil?
e.out.nil? && e.present.nil? == false
e.in.nil? && e.present.nil? == false
.in.nil? && e.present.nil? == false
e.in.nil? && e.out.nil? && e.present.nil? == false
exit
e.out.nil?
e.in.nil?
e.in.nil? || e.out.nil? && e.present.nil? == false
e.in.nil? || e.out.nil? && e.present.nil? == 
e.present == ""
e.present == nil
e.present
e.present.nil? == false
e.in.nil? || e.out.nil?
e.in.nil? || e.out.nil? && e.present.nil? == false
e.in.nil? && e.out.nil? && e.present.nil? == false
exit
e.in.nil? || e.out.nil? && e.present.nil? == false
e.in.nil? && e.out.nil? && e.present.nil? == false
exit
e.present.nil?
e.present.nil? == false
e.in.nil? && e.out.nil? && e.present == !nil
exit
e.present == !nil
e.present == ""
e.out.nil?
e.in.nil?
e.in.nil? && e.out.nil? && e.present == ""
exit
joining_detail.ot_option == true
joining_detail = JoiningDetail.where(employee_id: x).take
exit
x.to_i.joining_detail.ot_option
x.to_i
x
x.joining_detail
x.joining_detail.ot_option
lmm.late_mark.to_f
c
lmm.late_mark.to_f
exit
Workingday.where(id: wor,employee_id: wor.employee_id).update_all(calculated_payable_days: final_payable_day.to_f,ot_days: nil)
exit
Workingday.where(id: wor,employee_id: wor.employee_id).update_all(calculated_payable_days: final_payable_day.to_f,ot_days: nil)
exit
search_by_start_date
c
e.present == "P"
exit
EmployeeAttendance.create(employee_id: e.employee_id,day: e.day.to_date,in_time: e.in,out_time: e.out,machine_attendances_id: e.id,company_time_master_id: ctm.id,present: e.present,month_name: month_name)
\
exit
EmployeeAttendance.create(employee_id: e.employee_id,day: e.day.to_date,in_time: e.in,out_time: e.out,machine_attendances_id: e.id,company_time_master_id: ctm.id,present: e.present,month_name: month_name)
exit
e.present == "P"
e.shift_master_id == ctm.shift_master_id
exit
s1=MachineAttendance.create(employee_id: @emp_id,day: @day,in: 0,out: 0,shift_master_id: @shift_type,present: @present)
@in == "" && @out == ""
