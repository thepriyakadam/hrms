exit
a
c
exit
a=@employee_actual_workingday
@employee_actual_workingday = 1 + 1
a=@employee_actual_workingday
exit
@employee_actual_workingday
@employee_actual_workingday = 1 + 1
@employee_actual_workingday
exit
c
tp @employee_leav_balance
@employee_leav_balance.emp_available(e)
exit
tp @workingday = Workingday.where(employee_id: e.employee_id,month_name: f)
f
exit
tp @workingday = Workingday.where(employee_id: e.employee_id,month_name: f)
f
c
f.to_s
f
puts f
f
c
@day
puts @employee_actual_workingday
i
@from_month..@to_month
for i in @from_month..@to_month @workingday = Workingday.where(employee_id: e.employee_id,month_name: i) end
e
 i in @from_month..@to_month
i
e.employee_id
tp @workingday = Workingday.where(employee_id: e.employee_id,month_name: i)
@workingday = Workingday.where(employee_id: e.employee_id,month_name: i)
@employee_actual_workingday = @employee_actual_workingday.to_i + @day.inject{|n| n}
@employee_actual_workingday
exit
@employee_leav_balance.emp_available(e)
c
exit
to_date = e.to_date
 from_date = e.from_date
@employee_leav_balance.emp_available(e)
c
@employee_leav_balance.emp_available(e)
c
@employee_leav_balance.emp_available(e)
c
 @leave_master.working_day == nil
c
e.leav_category_id == @leave_master.leav_category_id && @leave_master.period == "Yearly"
e.employee.try(:status) == 'Active'
c
@leave_master = LeaveMaster.find_by(leav_category_id: e.leav_category_id)
@employee_leav_balance
@employee_leav_balance.is_present(e)
exit
@employee_leav_bal = EmployeeLeavBalance.where("to_date <= ? AND is_active = ?", Date.today,true)
@employee_leav_balance
@employee_leav_balance.is_present(e)
 @leave_master = LeaveMaster.find_by(leav_category_id: e.leav_category_id)
exit
tp @employee_leav_bal = EmployeeLeavBalance.where("to_date <= ? AND is_active = ?", Date.today,true)
params[:employee_leav_balance][:leav_category_id]
@leave_master = LeaveMaster.find_by(leav_category_id: e.leav_category_id)
@employee_leav_balance.is_present(e)
exit
@to_month = to_date.strftime('%B')
@from_month = from_date.strftime('%B')
to_date = e.to_date
from_date = e.from_date
e
exit
@employee_leav_balance.is_present(e)
exit
flag = Workingday.exists?(employee_id: e.employee_id,month_name: i)
c
@to_month
 @from_month
@employee_leav_balance.emp_available(e)
c
exit
tp @employee_leav_bal
to_date = e.to_date
from_date = e.from_date
@employee_leav_balance.is_present(e)
exit
 @employee_leav_balance.emp_available(e)
exit
@employee_actual_workingday = @employee_actual_workingday.to_i + @day.inject{|n| n}
@day = @workingday.pluck(:present_day).map {|i| i.to_i}
@workingday = Workingday.where(employee_id: e.employee_id,month_name: m)
@a
exit
@workingday = Workingday.where(employee_id: e.employee_id,month_name: m)
V
exit
@employee_actual_workingday = @employee_actual_workingday.to_i + @day.inject{|n| n}
@employee_actual_workingday
puts @employee_actual_workingday
@employee_actual_workingday
exit
@employee_actual_workingday = @employee_actual_workingday.to_i + @day.inject{|n| n}
 @day = @workingday.pluck(:present_day).map {|i| i.to_i}
@workingday = Workingday.where(employee_id: e.employee_id,month_name: 'May')
@employee_actual_workingday = @employee_actual_workingday.to_i + @day.inject{|n| n}
@day = @workingday.pluck(:present_day).map {|i| i.to_i}
@workingday = Workingday.where(employee_id: e.employee_id,month_name: 'April')
@employee_actual_workingday = @employee_actual_workingday.to_i + @day.inject{|n| n}
@day = @workingday.pluck(:present_day).map {|i| i.to_i}
@workingday = Workingday.where(employee_id: e.employee_id,month_name: 'March')
@employee_actual_workingday = @employee_actual_workingday.to_i + @day.inject{|n| n}
 @day = @workingday.pluck(:present_day).map {|i| i.to_i}
@workingday = Workingday.where(employee_id: e.employee_id,month_name: 'February')
@workingday = Workingday.where(employee_id: e.employee_id,month_name: i)
@from_month..@to_month
exit
tp @workingday = Workingday.where(employee_id: e.employee_id,month_name: 'February')
tp @workingday = Workingday.where(employee_id: e.employee_id,month_name: 'April')
tp @workingday = Workingday.where(employee_id: e.employee_id,month_name: 'October')
@workingday = Workingday.where(employee_id: e.employee_id,month_name: 'October')
@workingday = Workingday.where(employee_id: e.employee_id,month_name: 'January')
@employee_actual_workingday = @employee_actual_workingday.to_i + @day.inject{|n| n}
@day = @workingday.pluck(:present_day).map {|i| i.to_i}
 @from_month..@to_month
@workingday = Workingday.where(employee_id: e.employee_id,month_name: i)
c
@employee_actual_workingday = @employee_actual_workingday.to_i + @day.inject{|n| n}
@employee_actual_workingday
@employee_actual_workingday = @employee_actual_workingday.to_i + @day.inject{|n| n}
@day = @workingday.pluck(:present_day).map {|i| i.to_i}
@workingday = Workingday.where(employee_id: e.employee_id,month_name: i)
exit
@employee_leav_balance.emp_available(e)
exit
tp  @employee_leav_bal = EmployeeLeavBalance.where("to_date <= ? AND is_active = ?", Date.today,true)
 @employee_leav_bal = EmployeeLeavBalance.where("to_date <= ? AND is_active = ?", Date.today,true)
tp @employee_leav_bal
@employee_leav_bal
exit
e.employee.try(:status) == 'Active'
if e.employee.try(:status) == 'Active'
e.to_date
tp @leave_master = LeaveMaster.find_by(leav_category_id: e.leav_category_id)
@leave_master = LeaveMaster.find_by(leav_category_id: e.leav_category_id)
exit
@leave <= @leave_master.limit.to_f
@leave = @leave_master.no_of_leave.to_f + e.no_of_leave.to_f
@leave_master.is_carry_forward == true
 @total_day < @leave_master.working_day.to_f
@total_day = @total_day.to_i + @day.inject{|n| n}
@day = @workingday.pluck(:present_day).map {|i| i.to_i}
@workingday = Workingday.where(employee_id: e.employee_id,month_name: 'January')
@from_month..@to_month
@employee_leav_balance.emp_available(e)
@total_day
exit
flag
flag = Workingday.exists?(employee_id: e.employee_id,month_name: 'January')
flag = Workingday.exists?(employee_id: e.employee_id,month_name: i)
from_month..to_month
to_month = to_date.strftime('%B')
from_month = from_date.strftime('%B')
 from_month = from_date.strftime('%B')
 from_month = from_date.strftime('%m')
 from_month = from_date.strftime('%M')
from_date = e.from_date
 from_month = from_date.strftime('%B')
e
 to_date = e.to_date
from_date = e.from_date
exit
tp @workingday = Workingday.where(employee_id: e.employee_id,month_name: i)
@workingday = Workingday.where(employee_id: e.employee_id,month_name: i)
@day = @workingday.pluck(:present_day).map {|i| i.to_i}
@total_day = @total_day.to_i + @day.inject{|n| n}
 @total_day
exit
@total_day = @total_day.to_i + @day.inject{|n| n}
@total_day = @total_day.to_i + @day
@total_day = @total_day.to_i + @day.inject{|n| n}
@day = @workingday.pluck(:present_day).map {|i| i.to_i}
@workingday = Workingday.where(employee_id: e.employee_id,month_name: 'January')
@workingday = Workingday.where(employee_id: e.employee_id,month_name: January)
@total_day = 0
@from_month..@to_month
emp_available(e)
@employee_leav_balance.emp_available(e)
e.leav_category_id == @leave_master.leav_category_id && @leave_master.period == "Yearly"
e.leav_category_id == @leave_master.leav_category_id && @leave_master.period == "Monthly"
@leave_master.leav_category_id
e.leav_category_id
exit
@employee_leav_balance.is_present(2)
@employee_leav_balance.is_present(4899)
@employee_leav_balance.is_present(6382)
@employee_leav_balance.is_present(e)
from_date = e.from_date
tp EmployeeLeavBalance.where("to_date <= ? AND is_active = ?", Date.today,true)
EmployeeLeavBalance.where("to_date <= ? AND is_active = ?", Date.today,true)
@employee_leav_bal = EmployeeLeavBalance.where("to_date <= ? AND is_active = ?", Date.today,true)
exit
@employee_attendances = EmployeeAttendance.where(day: @date.to_date ,employee_id: @employees)
@employees = Employee.where(department_id: @department).pluck(:id)
@department = params[:pdf_salaries][:company_location_id]
@date = params[:pdf_salaries][:date]
exit
@employee_attendances = EmployeeAttendance.where(day: @date.to_date ,employee_id: @employees)
@employees = Employee.where(department_id: @department).pluck(:id)
@department = params[:pdf_salaries][:company_location_id]
@date = params[:pdf_salaries][:date]
exit
@year = params[:advance_salary][:year]
@month = params[:advance_salary][:month]
c
 @year = params[:advance_salary][:year]
@month = params[:advance_salary][:month]
c
@year = params[:advance_salary][:year]
@month = params[:advance_salary][:month]
exit
@month = params[:advance_salary][:month]
@month = params[:month]
@month = params[:advance_salary][:month]
c
@month = params[:advance_salary][:month]
c
@month = params[:advance_salary][:month]
@month = params[:month]
exit
month =  params[:advance_salary][:month]
month=  params[:advance_salary][:month]
(month =  @month)
(month: @month)
(month: @month
month: params[:month]
month: params[:advance_salary][:month]
month: params[:month]
(month: params[:advance_salary][:month],year: params[:advance_salary][:year],company_id: params[:advance_salary][:company_id],company_location_id: params[:advance_salary][:company_location_id],format: "pdf")
month: params[:advance_salary][:month]
month: @month
exit
@month = params[:month]
@month = params[:advance_salary][:month]
c
@company = params[:company_id]
@company = params[:advance_salary][:company_id]
@month = params[:month]
@month = params[:advance_salary][:month]
exit
@advance_salary = AdvanceSalary.where(employee_id: @employee_id).pluck(:id)
@advance_salaries = AdvanceSalary.where(employee_id: @employee_id)
