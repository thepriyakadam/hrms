exit
@emp_leave_bal.try(:no_of_leave)
tp @emp_leave_bal = EmployeeLeavBalance.where('employee_id = ? AND leav_category_id = ? AND is_active = ?', @employee.id, @employee_leav_request.leav_category_id,true).take
@emp_leave_bal.try(:no_of_leave)
tp @emp_leave_bal = EmployeeLeavBalance.where('employee_id = ? AND leav_category_id = ? AND is_active = ?', @employee.id, @employee_leav_request.leav_category_id,true)
tp @emp_leave_bal = EmployeeLeavBalance.where('employee_id = ? AND leav_category_id = ?', @employee.id, @employee_leav_request.leav_category_id)
@emp_leave_bal.try(:no_of_leave).to_f
@emp_leave_bal.try(:no_of_leave
@emp_leave_bal.no_of_leave
tp @emp_leave_bal = EmployeeLeavBalance.where('employee_id = ? AND leav_category_id = ? AND is_active = ?', @employee.id, @employee_leav_request.leav_category_id,true)
@emp_leave_bal.try(:no_of_leave).to_f
tp @emp_leave_bal = EmployeeLeavBalance.where('employee_id = ? AND leav_category_id = ? AND is_active = ?', @employee.id, @employee_leav_request.leav_category_id,true)
@emp_leave_bal = EmployeeLeavBalance.where('employee_id = ? AND leav_category_id = ? AND is_active = ?', @employee.id, @employee_leav_request.leav_category_id,true)
@emp_leave_bal.try(:no_of_leave).to_f
@employee_leav_request.leave_count.to_f
@employee_leav_request.leave_count
tp  @employee_leav_request.leave_status_records.build(change_status_employee_id: current_user.employee_id,status: "Pending", change_date: Date.today)
 @employee_leav_request.leave_status_records.build(change_status_employee_id: current_user.employee_id,status: "Pending", change_date: Date.today)
tp  @employee_leav_request
  @employee_leav_request
  @employee_leav_request.save
tp  @employee_leav_request.save
exit
tp @emp_leave_bal = EmployeeLeavBalance.where('employee_id = ? AND leav_category_id = ? AND is_active = ?', @employee.id, @employee_leav_request.leav_category_id,true)
tp @emp_leave_bal = EmployeeLeavBalance.where('employee_id = ? AND leav_category_id = ?', @employee.id, @employee_leav_request.leav_category_id)
tp @emp_leave_bal = EmployeeLeavBalance.where('employee_id = ? AND leav_category_id = ?', @employee.id, @employee_leav_request.leav_category_id).take
@emp_leave_bal = EmployeeLeavBalance.where('employee_id = ? AND leav_category_id = ?', @employee.id, @employee_leav_request.leav_category_id).take
@employee_leav_request.first_reporter_id = @employee.manager_id
tp @employee_leav_request.leave_records.build(employee_id: @employee_leav_request.employee_id,employee_leav_request_id: @employee_leav_request.id,status: "Pending", day: i)
tp @emp_leav_req = EmployeeLeavRequest.where(employee_id: @employee.id, date_range: date_range)
date_range = params['employee_leav_request']['date_range']
@leav_category = LeavCategory.find(@employee_leav_request.leav_category_id)
tp @leav_category = LeavCategory.find(@employee_leav_request.leav_category_id)
tp @leave_c_offs = LeaveCOff.where(employee_id: @employee.id)
@employee_leav_request.end_date = date_arr[1].lstrip
@employee_leav_request.start_date = date_arr[0].rstrip
date_arr = params['employee_leav_request']['date_range'].split('-')
tp @employee = Employee.find(@employee_leav_request.employee_id)
tp @employee_leav_request = EmployeeLeavRequest.new(employee_leav_request_params)
exit
flash[:alert] = "Leave Request already existed!" <%=  @emp_attendance.present %> ;
flash[:alert] = "Leave Request already existed!" <%=  @emp_attendance.present %> 
flash[:alert] = "Leave Request already existed!<%=  @emp_attendance.present %> "
flash[:alert] = "Leave Request already existed! @emp_attendance.present "
tp   @emp_attendance = EmployeeAttendance.find_by(day: i)
  @emp_attendance = EmployeeAttendance.find_by(day: i)
@employee_leav_request.start_date.to_date..@employee_leav_request.end_date.to_date
self.start_date.to_date..self.end_date.to_date
exit
@leave_c_off.expiry_date = @leave_c_off.c_off_date + @leave_c_off.c_off_expire_day
leav_category = LeavCategory.find_by_name('Compensatory Off')
leav_category = LeavCategory.find_by_name('C.Off')
@leave_c_offs = LeaveCOff.all
@leave_c_off.is_present
@leave_c_off = LeaveCOff.new(leave_c_off_params)
exit
LeaveMaster.exists?(leav_category_id: e.leav_category_id)
LeaveMaster.where(leav_category_id: e.leav_category_id)
exit
 LeaveMaster.exists?(leav_category_id: e.leav_category_id)
tp @employee_leav_bal = EmployeeLeavBalance.where(to_date: Date.today,is_active: true)
tp @employee_leav_bal = EmployeeLeavBalance.where(to_date: Date.today)
@employee_leav_bal = EmployeeLeavBalance.where(to_date: Date.today)
exit
@leave_master.limit
@leave <= @leave_master.limit
@leave_master.no_of_leave.to_i + e.no_of_leave.to_i
@leave_master.no_of_leave
e.no_of_leave
@leave_master.no_of_leave
@leave = @leave_master.no_of_leave + e.no_of_leave
exit
@employee_leav_bal.each do |e|
@leave_master = LeaveMaster.find_by(leave_category_id: e.leav_category_id)
@employee_leav_bal = EmployeeLeavBalance.where(to_date: Date.today)
exit
tp  @employee = Employee.find(@reporting_master.employee_id)
 @employee = Employee.find(@reporting_master.employee_id)
tp  @reporting_master = ReportingMaster.find(@employee_resignation.reporting_master_id)
 @reporting_master = ReportingMaster.find(@employee_resignation.reporting_master_id)
exit
@emp = EmployeeTransfer.find_by_employee_id(employee_transfer.employee_id)
@employee = Employee.find(@employee_transfer.employee_id)
@employee_transfer = EmployeeTransfer.find(employee_transfer.id)
@employee_transfer = employee_transfer
