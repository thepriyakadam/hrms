exit
@company = params[:advance_salary][:company_id]
@location = params[:advance_salary][:company_location_id]
@month = params[:advance_salary][:month]
exit
EmployeeAttendance.where(id: @c1.id).update_all(difference_hrs: calculated_working_hrs.abs)
calculated_working_hrs<0
lmm
calculated_working_hrs = late_working_hrs_1 - s.working_hrs.to_f
late_working_hrs_1 = time_diff.abs - lmm.late_mark.to_i.abs
late_working_hrs = time_diff.abs - lmm.late_mark.to_i.abs
c
late_diff =TimeDifference.between(@c1.in_time.strftime('%H:%M:%S'), s.in_time.strftime('%H:%M:%S')).in_minutes.abs.to_f
late_working_hrs = time_diff.abs - lmm.late_mark.to_i.abs
tp lmm
lmm
late_diff
total_time_diff
time_diff
exit
@in.to_datetime.utc
@in.to_datetime
@in = params[:machine_attendance][:in]
@emp_id = params[:machine_attendance][:employee_id]
   64:     @shift_type = params[:machine_attendance][:shift_master_id]
   63:     @out = params[:machine_attendance][:out]
   62:     @in = params[:machine_attendance][:in]
   61:     @day = params[:machine_attendance][:day]
@emp_id = params[:machine_attendance][:employee_id]
exit
c
@advance_salary.instalments.build(instalment_amount: @advance_salary.instalment_amount, instalment_date: start_date)
exit
b=a.next_month
a = @advance_salary.advance_date
start_date = @advance_salary.advance_date
a=a.next_month
start_date = start_date.next_month
@advance_salary.instalments.build
i in 1..@advance_salary.no_of_instalment.to_i
i
