<<<<<<< HEAD
exit
janu puch
@training_request
exit
@training_request
@training_request.save
@training_request
 @emp_total = @employee_ids.count
 @training_request
@employee_ids = params[:employee_ids]
a=current_user.employee_id
c
@employee_id
employee_id
c
@place = params[:place]
@training_topic_master_id = params[:training_topic_master_id]
c
@training_topic_master_id = params[:training_topic_master_id]
@training_topic_master_id = params[:training_request][:training_topic_master_id]
@training_topic_master_id = params[:training_topic_master_id]
c
@training_topic_master_id = params[:training_topic_master_id]
=> 92:   @training_topic_master_id = params[:training_topic_master_id]
c
 notice_period = params[:notice_period]
employee_id = params[:employee_id]
c
@employee = params[:employee_id]
JoiningDetail.find(params[:id])
JoiningDetail.where(params[:id])
JoiningDetail.find_by(params[:id])
JoiningDetail.find(params[:id])
tp @employee_resignation = Employee.find(params[:manual_employee_code])
tp @employee_resignation = Employee.find_by(params[:manual_employee_code])
tp @employee_resignation = Employee.find_by(:manual_employee_code)
Employee
Employee.find(params[:employee_id])
tp @employee_resignation = Employee.find(params[:employee_id]).pluck(id)
tp @employee_resignation = Employee.find(params[:employee_id]).to_i
tp @employee_resignation = Employee.find(params[:employee_id])
tp @employee_resignation = Employee.find_by(params[:employee_id])
tp @employee_resignation = EmployeeResignation.find_by(params[:employee_id])
@employee_resignation = EmployeeResignation.find_by(params[:employee_id])
@employee_resignation = EmployeeResignation.find(params[:employee_id])
@employee_resignation = params[:employee_id].to_s
@employee_resignation = params[:employee_id].to_i
@employee_resignation
params[:employee_id]
@employee_resignation = params[:employee_id]
@employee_resignation = params[:employee_resignation][:employee_id]
params
@employee_resignation = params[:employee_id]
@employee_
 @employee_resignation = params([:employee_id])
 @employee_resignation = params(params[:employee_id])
 @resignation_date = params[:resignation_date]
 @employee = Employee.find_by(params[:id])
 @employee = Employee.find_by(params[:id]).take
 @employee = Employee.find(params[:id]).take
 @employee = Employee.find(params[:id]).take'
 @employee = Employee.find(params[:id])
 @employee = Employee.find(params[:employee_id])
c
Employee.where(params[:id]).take
@joining_detail = JoiningDetail.find_by_employee_id(@employee)
@joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
Employee.where(params[:format])
Employee.where(params[:id]).pluck(id)
Employee.where(params[:id])
Employee.find_by(params[:id])
Employee.find_by(params[:format])
Employee
 @employee 
@notice_period_after_probation = @joining_detail.notice_period_after_probation
 @employee = Employee.find(params[:format])
 @employee = Employee.find(params[:formate])
 @employee = Employee.find(params[:format])
@joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
@resignation_date = params[:resignation_date]
 @employee = Employee.find(params[:id])
tp @employee = Employee.find(params[:employee_id])
tp @employee = Employee.find(params[:id])
 @employee = Employee.find(params[:id])
c
 @resignation_date = params[:resignation_date]
tp @employee = Employee.find(params[:id])
 @employee = Employee.find(params[:id])
c
 @employee = Employee.find(params[:format])
@joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
 @notice_period_after_probation = @joining_detail.notice_period_after_probation
tp @joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
 resignation_date = params[:resignation_date]
c
@notice_period_after_probation = @joining_detail.notice_period_after_probation
tp @joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
@joining_detail = JoiningDetail.find_by_employee_id(@employee.id)
resignation_date = params[:resignation_date]
 @employee = Employee.find_by(params[:format])
 @employee = Employee.find(params[:format])
 @employee = Employee.find(params[:id])
c
notice_period_after_probation = @joining_detail.notice_period_after_probation
resignation_date = params[:resignation_date]
c
notice_period_after_probation
notice_period_after_probation = @notice_period
d = resignation_date.to_date + notice_period_after_probation
@notice_period
 notice_period_after_probation
 notice_period_after_probation = @notice_period
resignation_date = params[:resignation_date]
c
 @exit_interview_date = params[:employee_resignation][:exit_interview_date]
 @employee_resignation = EmployeeResignation.find(params[:resignation_id])
employee_resignation
c
@emp_resig = EmployeeResignation.find(params[:format])
exit
@settled_on = params[:employee_resignation][:settled_on]
@settled_on = params[:settled_on]
tp @emp_resig = EmployeeResignation.find_by(params[:resignation_id])
@emp_resig = EmployeeResignation.find_by(params[:resignation_id])
exit
exi
exit
@settled_on = params[:settled_on]
@emp_resig = EmployeeResignation.find_by(params[:format])
@employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
c
@employees = Employee.where(manager_id: @emp).where(@employee_id =! @manager_id).count
@employees = Employee.where(manager_id: @emp).where(@employee_id != @manager_id).count
@manager_id = @emp.manager_id
@employee_id = @emp.id
@employees = Employee.where(manager_id: @emp).where(@employee_id == @manager_id).count
@employees = Employee.where(manager_id: @emp).where.not(@employee_id == @manager_id).count
@employees = Employee.where(manager_id: @emp).where.not(@employee_id = @manager_id).count
@employees = Employee.where(manager_id: @emp).where.not.(@employee_id = @manager_id).count
@employees = Employee.where(manager_id: @emp).where.not(@employee_id = @manager_id).count
@employees = Employee.where(manager_id: @emp).where(@employee_id = @manager_id).count
@employees = Employee.where(manager_id: @emp).where.not(@employee_id = @manager_id).count
@manager_id = @emp.manager_id
@employee_id = @emp.id
@employees = Employee.where(manager_id: @emp).count
@employees = Employee.where(manager_id: @emp)
@employees = Employee.where(manager_id: @emp).where.not(id: == manager_id:).count
@employees = Employee.where(manager_id: @emp).where.not(id: = manager_id:).count
@employees = Employee.where(manager_id: @emp).where.not(:id = :manager_id).count
@employees = Employee.where(manager_id: @emp).where.not(:id = manager_id).count
@employees = Employee.where(manager_id: @emp).count
@employees = @emp.subordinates.count
@employees = @emp.subordinates
  @emp = Employee.
  @emp = Employee.find(current_user.employee_id)
c
(settled_on: params)
 @employee_resignation.update(settled_on: params)
 @employee_resignation.update_all(settled_on: params)
 @employee_resignation.update(settled_on: params)
c
 params
 params[settled_on]
 params
 params[settled_on]
@settled_on = params[settled_on:]
@settled_on = params[:settled_on]
 @employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
@employee_resignation
c
 @settled_on = params[:settled_on].to_date
 @settled_on = params[:settled_on]
c
@settled_on = params[:settled_on] || params[:employee_resignation][:settled_on]
@settled_on = params[:settled_on] AND params[:employee_resignation][:settled_on]
@settled_on = params[:settled_on] OR params[:employee_resignation][:settled_on]
@settled_on = params[:settled_on] || params[:employee_resignation][:settled_on]
c
params
@settled_on = params[:settled_on]
c
tp @employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
 @employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
c
tp EmployeeResignation.create(settled_on: @settled_on)
 EmployeeResignation.create(settled_on: @settled_on)
 @settled_on = params[:settled_on]
@employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved",settled_on: nil)
c
@employee_resignation = EmployeeResignation.find(params[:id])
@employee_resignation = EmployeeResignation.find(params[]:id)
@settled_on = params[:employee_resignation][:settled_on]
c
params
c
 @employee_resignation.update(settled_on: @settled_on)
@settled_on = params[:settled_on]
@employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
'=> 517:     @employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
c
 @settled_on = params[:employee_resignation] ? params[:employee_resignation][:settled_on] : params[:settled_on]
 @settled_on = params[:employee_resignation] ? params[:employee_resignation][:settled_on] : params[:employee_resignation]
 @settled_on = params[:employee_resignation] ? params[:settled_on] : params[:employee_resignation]
 @settled_on = params[:employee_resignation][:settled_on]
 @settled_on = params[:settled_on]
c
@employee_resignation.update(settled_on: @settled_on)
@settled_on = params[:employee_resignation][:settled_on].to_date
@settled_on = params[:employee_resignation][:settled_on]
@settled_on = params[:settled_on]
  @employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
c
@employee_resignation.update_all(settled_on: @settled_on) 
    @settled_on = params[:settled_on]  
    @settled_on = params[:settled_on].to_date   
FinalApproved
 @employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
c
@employee_resignation = EmployeeResignation.find_by(resign_status: "FinalApproved")
@employee_resignation = EmployeeResignation.where(resign_status: "FinalApproved")
c
EmployeeResignation.where(resign_status: "FinalApproved").update_all(settled_on: @settled_on) 
    EmployeeResignation.where(resign_status: "FinalApproved").update_all(settled_on: @settled_on) 
update_all(settled_on: @settled_on) 
EmployeeResignation.where(resign_status: "FinalApproved")
c
tp EmployeeResignation.where(res: @employee_resignation.id)
EmployeeResignation.where(id: @employee_resignation.id)
@settled_on = params[:settled_on]
@settled_on = params[:employee_resignation]
@settled_on = params[:employee_resignation] ? params[:employee_resignation][:settled_on] : [:employee_resignation] 
@settled_on = params[:employee_resignation][:settled_on]
@employee_resignation = EmployeeResignation.find(params[:id])
@employee_resignation = EmployeeResignation.find_by(params[:id])
@employee_resignation = EmployeeResignation.find(params[:id])
c
@settled_on
 @employee_resignation = EmployeeResignation.find(params[:id])
 @employee_resignation = EmployeeResignation.find(params[:settled_on])
@settled_on = params[:settled_on] 
c
 @employee_resignations = EmployeeResignation.find(params[:settled_on])
 @employee_resignation = EmployeeResignation.find(params[:settled_on])
@settled_on = params[:settled_on] 
c
@employee_resignation = EmployeeResignation.find(params[:settled_on])
@employee_resignation = EmployeeResignation.find_by(params[:settled_on])
@employee_resignation = EmployeeResignation.find(params[:settled_on])
@employee_resignation = EmployeeResignation.find_by(params[:settled_on])
@employee_resignation = EmployeeResignation.find(params[:settled_on])
c
@employee_resignation = EmployeeResignation.find(params[:id])
@employee_resignation
@settled_on = params[:settled_on]   
c
 @settled_on = params[employee_resignation][:settled_on] 
=======
continue
params
continue
employee
n
continue
params
params["employee_id"]
params[employee_id]
params
params[:employee_id]
params
employee_id
Employee.where(id: employee_id)
employee
n
continue
n
employee.last.joining_detail.employee_designation.namen
employee.last.joining_detail.employee_designation.name
employee.last.joining_detail.employee_designation
employee.last.joining_detail.name
employee.last.joining_detail
employee.last.department.name
employee.last.department_id
 employee
employee
employee.last
employee.last.department_id
employee.last.department
employee.last.department.name
employee.last.sub_department
employee.last.cost_center
employee.last.joining_detail
employee.last.joining_detail.name
Employee.where(id: employee_id).count
Employee.where(id: employee_id)
n
params
continue
 employee_attendances.last.holiday.name
 employee_attendances.last.holiday_id
 employee_attendances.last.holiday_id.name
 employee_attendances.last
n
continue
Member.employee_id.class
Member.find(employee_id).class
Member.find(employee_id)
Member.find(employee_id).class == Group
employee_id
employee_id.class
employee_id.class == Group
employee_leav_requestcurrent_user.class == Group
 current_user.employee_id
employee_leav_request
n
nn
n
nn
n
continue
n
params
continue
EmployeePlan.where(id: employee_id)
current_user
EmployeePlan.where(id: current_user.employee_id)
params
continue
@employee_plans = EmployeePlan.find(current_user)
current_user
params
continue
n
continue
n
continue
n
@employee_leav_request.employee.manager_2_id.nil?
@employee_leav_request.current_status
@employee_leav_request.current_status = "Pending"
n
params
continue
leave_approval.count
continue
n
continue
n
continue
n
continue
leave_list.last.leave_status_records
leave_list.last.leave_status_records.
leave_list.last.leave_status_records.last
leave_list.last.leave_status_records
leave_list.last
leave_list
continue
leave_approval.last.current_status
leave_approval.last.status.name
leave_approval.last
leave_approval
continue
@user
n
password
email
n
continue
Member.find_by_email(email.downcase)
n
continue
EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}").count == 0
n
continue
EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}").count == 0
EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}").count
EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}")
EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}") == 0
employee = EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}") == 0
employee = EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}") == o
employee = EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}")
EmployeeLeavRequest.where(is_pending: true, is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}")
EmployeeLeavRequest.where(is_first_approved: false).count
params
employee = EmployeeLeavRequest.where(is_first_approved: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}")
continue
@first_approved_employee_leav_requests = EmployeeLeavRequest.where(is_first_approved: true, is_second_approved: false, is_second_rejected: false, is_cancelled: false, second_reporter_id: current_user.employee_id).count
EmployeeLeavRequest.where(is_first_approved: true, is_second_approved: false, is_second_rejected: false, is_cancelled: false, second_reporter_id: current_user.employee.count
EmployeeLeavRequest.where(is_first_approved: true, is_second_approved: false, is_second_rejected: false, is_cancelled: false, second_reporter_id: current_user.employee
EmployeeLeavRequest.where(is_first_approved: true, is_second_approved: false, is_second_rejected: false, is_cancelled: false, second_reporter_id: current_user.employee_id)
EmployeeLeavRequest.where(is_pending: true, is_first_approved: false, is_first_rejected: false, is_cancelled: false, first_reporter_id: current_user.employee_id)
n
current_user.class == Group
continue
EmployeeLeavRequest.where(is_pending: true, is_first_approved: false, is_first_rejected: false, is_cancelled: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}").count
EmployeeLeavRequest.where(is_pending: true, is_first_approved: false, is_first_rejected: false, is_cancelled: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}")
n
continue
leave_approval =  EmployeeLeavRequest.where(is_pending: true, is_first_approved: false, is_first_rejected: false, is_cancelled: false).where("first_reporter_id = ? OR second_reporter_id = ?", "#{employee_id}", "#{employee_id}")
params
continue
EmployeeLeavBalance.where(employee_id: @leave_user)
n
params
continue
@employee_plan.manager_id
@employee_plan.manager_id.try(:manual_employee_code)
@employee_plan.manager_id.try(:manual_employee_code) - full_name(@employee_plan.try(:managers))
@employee_plan.manager_id.try(:manual_employee_code) - full_name(@employee_plan.try(:manager))
@employee_plan
@employee_plan.manager_id.try(:manual_employee_code)
@employee_plan.manager.try(:manual_employee_code)
@employee_plan.manager.try(:manual_employee_code) - full_name(@employee_plan.try(:manager))
@employee_plan.manager.try(:manual_employee_code) %> - <%= full_name(@employee_plan.try(:manager))
<%= @employee_plan.manager.try(:manual_employee_code) %> - <%= full_name(@employee_plan.try(:manager))
<%= @employee.manager.try(:manual_employee_code) %> - <%= full_name(@employee.try(:manager))
continue
@employee_plan.manager.try(:name)
@employee_plan.manager.try(:first_name)
@employee_plan.manager.employee.try(:first_name)
@employee_plan.employee.employee.try(:first_name)
@employee_plan.employee.@employee_plan.manager_id
continue
@employee_plan.employee.
continue
@employee_plan.employee.try(:first_name)
current_user.employee_id
@employee_plan
continue
Member.find(member_id).login_count
member_id
count
n
count
n
count
member_id
n
params
continue
n
count
n
continue
n
user_signed_in? == true
user_signed_in? == false
login_count == 0
login_count
n
count
n
member_id
mrmber_id
n
continue
n
continue
count
continue
member_signed_in?
authenticate_member!
user_signed_in?
user_session
continue
c
session.user
session.current_user
session.id
continue
@session
@session_id
session_id
gets session_id
gets session id
continue
urrent_user.id
current_user
current.user
user_signed_in?
continue
user_signed_in?
resource
user_signed_in? 
user_signed_in?
user_signed_in
user_signed_in? 
continue
user_signed_in? != false
user_signed_in? != true
user_signed_in? == false
n
user_signed_in?
user_signed_in? == false
user_signed_in?
 @suit.user == current_user
if @suit.user == current_user
session[:user_id]
session[:current_user]
session
session[:user_id]
continue
current_user.id
continue
n
nn
n
params
continue
params
continue
params
continue
>>>>>>> 61b4414f67edb46fa3f8696263ae1f6c0aab1c5e
