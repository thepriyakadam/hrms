exit
tp @issue_tracker_members = @issue_tracker_group.issue_tracker_members
tp  @issue_tracker_group = IssueTrackerGroup.find(params[:group_id])
 @issue_tracker_group = IssueTrackerGroup.find(params[:group_id])
exit
tp @issue_tracker_access = IssueTrackerAccess.where(issue_tracker_group_id: @issue_tracker_member.issue_tracker_group_id,role: "Admin")
tp @issue_requests = IssueRequest.where(issue_tracker_group_id: @issue_tracker_member.issue_tracker_group_id)
tp @issue_tracker_member = IssueTrackerMember.find_by_employee_id(current_user.employee_id)
@issue_tracker_member = IssueTrackerMember.find_by_employee_id(current_user.employee_id)
exit
tp IssueLockerHistory.create(issue_request_id: @issue_request.id,employee_id: current_user.employee_id,status: 'Unlock')
tp IssueLockerHistory.create(issue_request_id: @issue_request.id,employee_id: @issue_request.employee_id,status: 'Unlock')
tp IssueLockerHistory.create(issue_locker_id: @issue_locker.id,issue_request_id: @issue_request.id,employee_id: @issue_request.employee_id,status: 'Unlock')
tp IssueLockerHistory.create(issue_request_id: @issue_request.id,employee_id: @issue_request.employee_id,status: 'Unlock')
tp IssueLockerHistory.create(,issue_request_id: @issue_request.id,employee_id: @issue_request.employee_id,status: 'Unlock')
tp IssueLockerHistory.create(issue_locker_id: @issue_locker.id,issue_request_id: @issue_request.id,employee_id: @issue_request.employee_id,status: 'Unlock')
tp @issue_locker = IssueLocker.where(issue_request_id: @issue_request.id)
@issue_locker = IssueLocker.where(issue_request_id: @issue_request.id)
@issue_request.update(employee_id: nil)
 @issue_request = IssueRequest.find(params[:format])
exit
 @issue_tracker_member = IssueTrackerMember.find_by_employee_id(current_user.employee_id)
exit
issue_tracker_access_params
exit
