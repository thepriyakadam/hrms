c
joining_detail = JoiningDetail.where("joining_date >= ?",@date.to_date).pluck(:employee_id)
joining_detail = JoiningDetail.where("joining_date >= ?",@date).pluck(:employee_id)
c
@leave_c_off
@leave_c_off.update(employee_id: params_employee_id,c_off_date: params_c_off_date,c_off_type: params_c_off_type,c_off_expire_day: params_c_off_expire_day,expiry_status: params_expiry_status,is_taken: false,expiry_date: expiry_date,leave_count: 1,is_expire: nil)
@leave_c_off
params_c_off_type == "Full Day"
@leave_c_off.c_off_type == params_c_off_type
params_c_off_type
@leave_c_off.c_off_type
c
tp @a.update(employee_id: params_employee_id) 
@a.update(employee_id: params_employee_id) 
@a =  @leave_c_off
tp @leave_c_off
@leave_c_off
@leave_c_off.update(employee_id: params_employee_id) 
@leave_c_off.update(employee_id: params_employee_id,c_off_date: params_c_off_date.to_date,c_off_type: params_c_off_type,is_taken: false,expiry_date: expiry_date,leave_count: 1,is_expire: nil) 
@leave_c_off.update(employee_id: params_employee_id,c_off_date: params_c_off_date,c_off_type: params_c_off_type,is_taken: false,expiry_date: expiry_date,leave_count: 1,is_expire: nil) 
@leave_c_off.update(employee_id: params_employee_id,c_off_date: params_c_off_date,c_off_type: params_c_off_type,expiry_status: params_expiry_status,is_taken: false,expiry_date: expiry_date,leave_count: 1,is_expire: nil) 
@leave_c_off.update(employee_id: params_employee_id,c_off_date: params_c_off_date,c_off_type: params_c_off_type,c_off_expire_day: params_c_off_expire_day,expiry_status: params_expiry_status,is_taken: false,expiry_date: expiry_date,leave_count: 1,is_expire: nil) 
tp @employee_leave_balance = EmployeeLeavBalance.where(employee_id: params_employee_id, leav_category_id: leav_category.id).take
@employee_leave_balance = EmployeeLeavBalance.where(employee_id: params_employee_id, leav_category_id: leav_category.id).take
leav_category = LeavCategory.find_by_name('C.Off')
expiry_date = @leave_c_off.c_off_date + @leave_c_off.c_off_expire_day
params_c_off_expire_day = leave_c_off_params["c_off_expire_day"]
params_expiry_status = leave_c_off_params["expiry_status"]
params_c_off_type = leave_c_off_params["c_off_type"]
params_c_off_date = leave_c_off_params["c_off_date"]
 params_employee_id = leave_c_off_params["employee_id"]
c
coff.update(is_expire: nil,expiry_status: false,expiry_date: nil,leave_count: 1,c_off_expire_day: 0)
coff.update(is_expire: nil,expiry_status: false,expiry_date: nil,leave_count: 1,c_off_expire_day: nil)
coff.update(is_expire: nil,expiry_status: false,expiry_date: nil,leave_count: 1)
coff.update(is_expire: nil,expiry_status: false,expiry_date: nil,leave_count: 0)
coff.update(is_expire: nil,expiry_status: false,expiry_date: nil)
coff.update(is_expire: nil,expiry_status: false)
coff.update(is_expire: nil)
coff = LeaveCOff.find_by(id: @coff.id)
coff.update(is_expire: nil,expiry_status: false,expiry_date: nil)
coff.update(is_expire: nil,expiry_status: false,expiry_date: nil,c_off_expire_day: nil)
coff.update(is_expire: nil,expiry_status: false,expiry_date: nil)
coff.update(is_expire: nil,expiry_status: false)
coff.update(is_expire: nil)
coff = LeaveCOff.find_by(id: @coff.id)
 @coff.update(expiry_date: nil,is_expire: false,leave_count: 1,expiry_status: false,c_off_expire_day: nil)
@coff =  @leave_c_off = LeaveCOff.find(params[:id])
tp @leave_c_off = LeaveCOff.find(params[:id])
tp @leave_c_off 
 @leave_c_off.update(expiry_date: nil,is_expire: false,leave_count: 1,expiry_status: false,c_off_expire_day: nil)
@leave_c_off.c_off_type == 'Full Day'
@no_of_leav = @emp_leav_bal1.no_of_leave
tp @emp_leav_bal1 = EmployeeLeavBalance.where(employee_id: @leave_c_off.employee_id,leav_category_id: leav_category.id).take
tp @emp_leav_bal = EmployeeLeavBalance.where(employee_id: @leave_c_off.employee_id,leav_category_id: leav_category.id)
leav_category = LeavCategory.find_by(name: 'C.Off')
tp @leave_c_off = LeaveCOff.find(params[:id])
c
@advance_salary
@advance_salary.instalments
@advance_salary.instalment
@advance_salary.instalments
@advance_salary.no_of_instalment.to_i
@advance_salary.no_of_instalment
tp @advance_salary
@advance_salary
start_date = @advance_salary.advance_date
tp @advance_salary = AdvanceSalary.new(advance_salary_params)
 @advance_salary = AdvanceSalary.new(advance_salary_params)
c
 @effective  =  EmployeePromotion.where(employee_id: @employee_promotion.employee_id)
@effective.update(effective_to: @employee_promotion.effective_from)
@effective  =  EmployeePromotion.where(employee_id: @employee_promotion.employee_id)
tp  @employee_promotion = EmployeePromotion.new(employee_promotion_params)
 @employee_promotion = EmployeePromotion.new(employee_promotion_params)
c
tp @c_off = LeaveCOff.where(is_expire: false,expiry_status: true)
@c_off = LeaveCOff.where(is_expire: false,expiry_status: true)
@leave_c_off.expiry_status == true
leav_category = LeavCategory.find_by_name('C.Off')
leav_category = LeavCategory.find_by_name('Compensatory Off')
tp @leave_c_offs = LeaveCOff.all
@leave_c_offs = LeaveCOff.all
@leave_c_off.is_present?
tp @leave_c_off = LeaveCOff.new(leave_c_off_params)
@leave_c_off = LeaveCOff.new(leave_c_off_params)
exit
employee_id = @employee.id
est.employee_id = @employee.id
tp @salary_component_templates
 @salary_component_templates
 @salary_component_templates.each do |t|
tp @salary_component_templates = @salary_template.salary_component_templates unless @salary_template.nil?
@salary_component_templates = @salary_template.salary_component_templates unless @salary_template.nil?
EmployeeTemplate.create(employee_id: @employee.try(:id), salary_template_id: @salary_template.id, start_date: Date.today)
exit
c
tp  @joining_details = JoiningDetail.where(employee_id: @employee.id)
 @joining_details = JoiningDetail.where(employee_id: @employee.id)
 @employee = Employee.find_by_manual_employee_code(ex.cell(line,'A').to_i)
@joining_details @employee = Employee.find_by_manual_employee_code(ex.cell(line,'A').to_i)
tp  @joining_details = JoiningDetail.where(employee_id: @employee.id)
t
t = @joining_details = JoiningDetail.where(employee_id: @employee.id)
@joining_details
 @joining_details = JoiningDetail.where(employee_id: @employee.id)
c
tp texable_amount = @next_slab.try(:to).to_d - params_value.to_d
texable_amount = @next_slab.try(:to).to_d - params_value.to_d
@previous_slab.nil?
@next_slab.nil?
tp @previous_slab = Slab.find_by(id: @previous_id)
@previous_slab = Slab.find_by(id: @previous_id)
tp @next_slab = Slab.find_by(id: @next_id)
@next_slab = Slab.find_by(id: @next_id)
@previous_id = @slab.id.to_i - 1
@next_id = @slab.id.to_i + 1
@next_id = @slab.id.to_i
params_value = slab_params["to"]
slab_params
@slab.update(slab_params)
c
 @employee_attendances = EmployeeAttendance.where("strftime('%m/%Y', day) = ?", @date.strftime('%m/%Y')).where(employee_id: @employees).group(:employee_id)
tp  @employee_attendances = EmployeeAttendance.where("strftime('%m/%Y', day) = ?", @date.strftime('%m/%Y')).where(employee_id: @employees)
 @employee_attendances = EmployeeAttendance.where("strftime('%m/%Y', day) = ?", @date.strftime('%m/%Y')).where(employee_id: @employees)
 @employee_attendances = EmployeeAttendance.where("DATE_FORMAT('%m/%Y', day) = ?", @date.strftime('%m/%Y')).where(employee_id: @employees)
 @employee_attendances = EmployeeAttendance.where("DATE_FORMAT('%m/%Y', day) = ?", @date.strftime('%m/%y')).where(employee_id: @employees)
 @employee_attendances = EmployeeAttendance.where("DATE_FORMAT('%m/%Y', day) = ?", @date.strftime('%m/%Y')).where(employee_id: @employees)
 @employee_attendances = EmployeeAttendance.where("DATE_FORMAT('%m/%Y', day) = ?", @date.strftime('%m/%Y')).where(employee_id: @employees).group(:employee_id)
tp  @employee_attendances = EmployeeAttendance.where("DATE_FORMAT('%m/%Y', day) = ?", @date.strftime('%m/%Y'))
 @employee_attendances = EmployeeAttendance.where("DATE_FORMAT('%m/%Y', day) = ?", @date.strftime('%m/%Y'))
 @employee_attendances = EmployeeAttendance.where("DATE_FORMAT('%m/%Y', day) = ?", @date.strftime('%m/%Y')).where(employee_id: @employees).group(:employee_id)
@employee_attendances = EmployeeAttendance.where("DATE_FORMAT('%m/%Y', day) = ?", @date.strftime('%m/%Y')).where(employee_id: @employees)
c
Employee.find_by(id: 2).update(manager_id: manager_1,manager_2_id: manager_2)
Employee.find_by(id: 2).update(manager_id: manager_1)
Employee.find_by(id: 2).update(manager_id: manager_1,manager_2_id: manager_2)
Employee.find_by(id: 2).update_all(manager_id: manager_1,manager_2_id: manager_2)
Employee.find_by(id: 2).update(manager_id: manager_1,manager_2_id: manager_2)
Employee.find_by(id: 2).update(manager_id: manager_1,manager_2_id: manager_@)
Employee.find_by(id: 2).update(manager_id: manager_1)
Employee.find_by(id: 2)
tp @reporting_master1 = ReportingMaster.find_by(id: @manager2)
tp @reporting_master1 = ReportingMaster.find_by(id: @manager1)
@reporting_master1 = ReportingMaster.find_by(id: @manager1)
employee.update_attributes(manager_id: manager_1, manager_2_id: manager_2)
manager_2
manager_1 
employee
employee.update(manager_id: manager_1, manager_2_id: manager_2)
employee.update_attributes(manager_id: manager_1)
employee.update_attributes(manager_id: manager_1, manager_2_id: manager_2)
manager_2 = @reporting_master2.try(:employee_id)
manager_1 = @reporting_master1.employee_id
@reporting_master2 = ReportingMaster.find_by(id: @manager2)
@manager2 = manager_2_id.inject{|n| n}
@reporting_master1 = ReportingMaster.find_by(id: @manager1)
@manager1 = manager_id.inject{|n| n}
manager_id = params[:manager_id]
role
employee.manual_employee_code
employee.employee_code
employee.company_location_id
employee.company_location.company_id
employee.department_id
 employee.id
tp employee = Employee.find(params['login']['employee_id'])
employee = Employee.find(params['login']['employee_id'])
final = @employee_ids.zip(role_id,manager_id,manager_2_id)
role = role_id.inject{|n| n}
manager_2_id = params[:manager_2_id]
 manager_id = params[:manager_id]
role_id = params[:role_id]
@employee_ids = params[:employee_ids]
c
@employee_ids = params[:employee_ids]
 final = @employee_ids.zip(role_id,manager_id,manager_2_id)
tp final = @employee_ids.zip(role_id,manager_id,manager_2_id)
role = role_id.inject{|n| n}
manager_2_id = params[:manager_2_id]
manager_id = params[:manager_id]
role_id = params[:role_id]
@employee_ids = params[:employee_ids]
c
role_id
role = role_id.inject{|n| n}
tp employee = Employee.find(params['login']['employee_id'])
employee = Employee.find(params['login']['employee_id'])
final = @employee_ids.zip(role_id,manager_id,manager_2_id)
role = role_id.inject{|n| n}
manager_2_id = params[:manager_2_id]
 manager_id = params[:manager_id]
role_id = params[:role_id]
 @employee_ids = params[:employee_ids]
c
 from.strftime("%d") == "26" && to.strftime("%d") == "25"
 from.strftime("%d") == 26 && to.strftime("%d") == 25
to.strftime("%d")
from.strftime("%d")
c
 EmployeeAttendance.where(day: from.to_date..to.to_date)
 EmployeeAttendance.where(day: from..to)
to = params[:employee][:to]
from = params[:employee][:from]
