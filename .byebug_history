c
@ctc = @employee_salary_templates.sum(:annual_amount).to_f
@ctc = @employee_salary_templates.sum(:annual_amount)
tp @employee_salary_templates = @current_template.employee_salary_templates
@employee_salary_templates = @current_template.employee_salary_templates
@current_template = EmployeeTemplate.where(employee_id: employee.id, is_active: true).take
employee = Employee.find(params[:employee_id])
@ctc
c
texable_amount.to_f
texable_amount = @next_slab.try(:to).to_d - params_value.to_d
texable_amount.to_f
texable_amount = @slab.try(:to).to_d - params_value.to_d
tp @next_slab = Slab.find_by(id: @id)
@next_slab = Slab.find_by(id: @id)
@id = @slab.id.to_i + 1
params_value = slab_params["to"]
slab_params
exit
slab_value.to_f
slab_value
last_value1.to_f
exit
slab_value.to_f
@ctc.to_f
@ctc
last_value1.to_f
slab_value
last_value1
exit
EXIT
last_value1
c
last_value1
slab_value
c
slab_value
last_value1
c
slab_value
last_value1
c
slab_value
last_value1
c
last_value1
slab_value
c
slab_value
c
tp @ctc = @employee_salary_templates.sum(:annual_amount)
@ctc = @employee_salary_templates.sum(:annual_amount)
tp @employee_salary_templates = @current_template.employee_salary_templates
@employee_salary_templates = @current_template.employee_salary_templates
@current_template = EmployeeTemplate.where(employee_id: employee_id.id, is_active: true).take
employee_id = Employee.find(params[:employee_id])
c
texable_amount = @slab.to - @previous_slab.to
tp @previous_slab = Slab.find_by(id: @id)
@previous_slab = Slab.find_by(id: @id)
V
@slab.id.to_i
@id = @slab.id.to_i - 1
exit
@emp_leave_bal1.try(:no_of_leave).to_f
@employee_leav_request.leave_count.to_f
@employee_leav_request.leave_count.to_f > @emp_leave_bal1.try(:no_of_leave).to_f
tp @emp_leave_bal1 =  EmployeeLeavBalance.where(employee_id: @employee.id,leav_category_id: @employee_leav_request.leav_category_id,is_active: false).last
@emp_leave_bal1 =  EmployeeLeavBalance.where(employee_id: @employee.id,leav_category_id: @employee_leav_request.leav_category_id,is_active: false).last
exit
deducted_actual_amount = ia.instalment_amount
tp deducted_actual_amount = ia.instalment_amount
n
tp deducted_actual_amount = ia.instalment_amount
a
tp deducted_actual_amount = ia.instalment_amount
deducted_actual_amount = ia.instalment_amount
@instalment_array
@instalment_array.each do |e|
@instalment_array.instalment_amount
@instalment_array
c
tp  deducted_actual_amount = ia.advance_salary.instalment_amount
 deducted_actual_amount = ia.advance_salary.instalment_amount
c
deducted_actual_amount = ia.advance_salary.instalment_amount
tp deducted_actual_amount = ia.advance_salary.instalment_amount
tp deducted_total_actual_amount += deducted_actual_amount
tp deducted_calculated_amount = deducted_actual_amount
deducted_calculated_amount = deducted_actual_amount
tp deducted_actual_amount = ia.advance_salary.instalment_amount
deducted_actual_amount = ia.advance_salary.instalment_amount
deducted_actual_amount
 @instalment_array
c
@instalment_array << i
@instalments = instalments
a
@instalments = a.instalments
@advance_salaries = AdvanceSalary.where(employee_id: @employee.id)
c
@employee.id
ss.employee_id = @employee.id
 @employee = Employee.find(eid)
 @employee = Employee.find_by(id: eid)
c
@employee_week_offs = EmployeeWeekOff.where(employee_id: @employees,date: from_date.to_date..to_date.to_date)
@employee_week_offs = EmployeeWeekOff.where(employee_id: @employees,date: from_date.to_date..to_date.to_date,is_confirm: false)
@employees = Employee.where(company_location_id: location.to_i).pluck(:id)
elsif department == ""
department
location
company
